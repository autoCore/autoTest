<?xml version="1.0" encoding="UTF-8"?>
	<spirit:component xmlns:kactus2="http://funbase.cs.tut.fi/" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5 http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5/index.xsd">
		<spirit:vendor>org.example</spirit:vendor>
		<spirit:library>example_lib</spirit:library>
		<spirit:name>pmuccu</spirit:name>
		<spirit:version>example_version</spirit:version>
<spirit:memoryMaps>
<spirit:memoryMap>
<spirit:name>some_register_map</spirit:name>
<spirit:displayName>RDL Example Registers</spirit:displayName>
<spirit:addressBlock>
<spirit:name>some_register_map</spirit:name>
<spirit:displayName>ASR Module Registers</spirit:displayName>
<spirit:description>This address map contains some example registers to show how RDL can be utilized in various situations.</spirit:description>
<spirit:baseAddress>0xF00E0000</spirit:baseAddress>
<spirit:range>0x2000</spirit:range>
<spirit:width>32</spirit:width>
<spirit:usage> </spirit:usage>
<spirit:volatile>true</spirit:volatile>
<spirit:register>
<spirit:name>CCCR</spirit:name>
<spirit:description>Communication Subsystem Clock Configuration Register</spirit:description>
<spirit:addressOffset>0X0000</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>L2CF</spirit:name>
<spirit:description>l2 cache clock force  0 = l2 cache clock is not forced  1 = l2 cache clock is always on</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CSCD</spirit:name>
<spirit:description>not used</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CCSR</spirit:name>
<spirit:description>Communication Subsystem Clock Status Register (not used any longer)</spirit:description>
<spirit:addressOffset>0X0004</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CSCD_S</spirit:name>
<spirit:description>communication subsystem clock divider status  0x0 = reserved  0x1 = communication subsystem clock equals input clock divided by 1  0x2 = communication subsystem clock equals input clock divided by 2  0x3 = communication subsystem clock equals input clock divided by 3  0x4 = communication subsystem clock equals input clock divided by 4  0x5 = reserved  0x6 = reserved  0x7 = reserved  this bit is update after frequency change procedure completion (see gcccr f bit).</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>GCCCR</spirit:name>
<spirit:description>Grayback Core Clock Control Register (not used any longer)</spirit:description>
<spirit:addressOffset>0X0008</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>F</spirit:name>
<spirit:description>core frequency change  0 = no  core frequency change is performed  1 =  core frequency change sequence will begin when written  new cscd_s values must be programmed before setting the f bit.  software should not try to set the f bit when it is already a 1. doing so may result in undefined behavior.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>MPCR</spirit:name>
<spirit:description>Communication Subsystem Power Control Register</spirit:description>
<spirit:addressOffset>0X0100</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>LMP_REQ50</spirit:name>
<spirit:description>td modem power request  0 = disable lte modem power  1 = enable td modem power  changing the state of this bit initiates an immediate change. the actual status of the td modem power is indicated by cpsr[wms]. software should wait until the status matches the request before making a new request. power is always removed from lte when the msa system enters deep sleep. if this bit=1, then modem power will be on when gb power is on</spirit:description>
<spirit:bitOffset>24</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LMP_REQ51</spirit:name>
<spirit:description>lte modem power request  0 = disable lte modem power  1 = enable lte modem power  changing the state of this bit initiates an immediate change. the actual status of the lte modem power is indicated by cpsr[wms]. software should wait until the status matches the request before making a new request. power is always removed from lte when the msa system enters deep sleep. if this bit=1, then modem power will be on when gb power is on</spirit:description>
<spirit:bitOffset>23</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WMP_REQ</spirit:name>
<spirit:description>w-cdma modem power request  0 = disable w-cdma modem power  1 = enable w-cdma modem power  changing the state of this bit initiates an immediate change. the actual status of the w-cdma modem power is indicated by cpsr[wms]. software should wait until the status matches the request before making a new request. power is always removed from w-cdma when the msa system enters deep sleep. if this bit=1, then modem power will be on when gb power is on</spirit:description>
<spirit:bitOffset>22</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>PM</spirit:name>
<spirit:description>power mode select. &lt;00&gt; do not turn off msa power when msa sleep mode is reached &lt;01 or 11&gt; enter msa power off when msa sleep mode is reached &lt;10&gt; enter msa power off when msa sleep mode is reached and the modem slow clock has bb_d2_entry_ok signal asserted   deep sleep exit resets this bit to the value indicated in the reset row.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CMCR</spirit:name>
<spirit:description>Communication Subsystem Miscellaneous Counters Register </spirit:description>
<spirit:addressOffset>0X0114</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
</spirit:register>
<spirit:register>
<spirit:name>MPSR</spirit:name>
<spirit:description>Communication Subsystem Power Status Register</spirit:description>
<spirit:addressOffset>0X0118</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CC_SWR70</spirit:name>
<spirit:description>software-controlled reset events tracking field. this field can be written (and read) to any value between 0x0 and 0xf. in order to track events through wdt reset events.  this field's content does not affect  functionality in any way</spirit:description>
<spirit:bitOffset>28</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TMS</spirit:name>
<spirit:description>td modem power status  0 = lte modem power disabled  1 = td modem power enabled.</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LMS</spirit:name>
<spirit:description>lte modem power status  0 = lte modem power disabled  1 = lte modem power enabled.</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WMS</spirit:name>
<spirit:description>w-cdma modem power status  0 = w-cdma modem power disabled  1 = w-cdma modem power enabled.</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LPM</spirit:name>
<spirit:description>deep sleep state exit reset  0 = has not occurred since the last time software or subsystem reset cleared this bit  1 = has occurred since the last time software or subsystem reset cleared this bit  when the system experiences a power on reset lpm field would be cleared.</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CWER</spirit:name>
<spirit:description>Communication Subsystem general purpose wakeup enable</spirit:description>
<spirit:addressOffset>0X0120</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CC_85</spirit:name>
<spirit:description>enable the general purpose wakeup</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>18</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>Cwesr_wakeup_en</spirit:name>
<spirit:description>Communication Subsystem general wakeup global enable</spirit:description>
<spirit:addressOffset>0X0128</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CC_93</spirit:name>
<spirit:description>reset the wakeup event to cp_</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP_EN</spirit:name>
<spirit:description>the global wake enable signal for general purpose wakeup</spirit:description>
<spirit:bitOffset>30</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CIER</spirit:name>
<spirit:description>Communication Subsystem Interrupt Enable Register</spirit:description>
<spirit:addressOffset>0X0130</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>FC_IE</spirit:name>
<spirit:description>frequency change interrupt enable  0 = do not generate an interrupt after a frequency change procedure is completed  1 = generate an interrupt after a frequency change procedure is completed</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CGDES</spirit:name>
<spirit:description>MSA Deep Sleep Entry Status Register</spirit:description>
<spirit:addressOffset>0X0140</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>GDES</spirit:name>
<spirit:description>msa core deep sleep entry status  this field is maintained entirely by msa core software to synchronize entry into deep sleep with the controller core.  deep sleep entry codes:  a (0x0) = core is running, no deep sleep -related activity in progress  d (0x6) = msa is in deep sleep state.  all other values are reserved.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CSSR</spirit:name>
<spirit:description>Communication Subsystem Spare Register</spirit:description>
<spirit:addressOffset>0X0200</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
</spirit:register>
</spirit:addressBlock>
</spirit:memoryMap>
</spirit:memoryMaps>
</spirit:component>