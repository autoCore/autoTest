<?xml version="1.0" encoding="UTF-8"?>
	<spirit:component xmlns:kactus2="http://funbase.cs.tut.fi/" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5 http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5/index.xsd">
		<spirit:vendor>org.example</spirit:vendor>
		<spirit:library>example_lib</spirit:library>
		<spirit:name>usim</spirit:name>
		<spirit:version>example_version</spirit:version>
<spirit:memoryMaps>
<spirit:memoryMap>
<spirit:name>some_register_map</spirit:name>
<spirit:displayName>RDL Example Registers</spirit:displayName>
<spirit:addressBlock>
<spirit:name>some_register_map</spirit:name>
<spirit:displayName>ASR Module Registers</spirit:displayName>
<spirit:description>This address map contains some example registers to show how RDL can be utilized in various situations.</spirit:description>
<spirit:baseAddress>0xD0292000</spirit:baseAddress>
<spirit:range>0x2000</spirit:range>
<spirit:width>32</spirit:width>
<spirit:usage> </spirit:usage>
<spirit:volatile>true</spirit:volatile>
<spirit:register>
<spirit:name>USIM_RBR</spirit:name>
<spirit:description>USIM Receive Buffer Register</spirit:description>
<spirit:addressOffset>0X00</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>PERR21</spirit:name>
<spirit:description>parity error  0 = either there was no parity error when receiving the character or the parity bit was masked by the &lt;parity error mask&gt; field in the usim fifo control register  1 = character was received with a parity error</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RB</spirit:name>
<spirit:description>data byte received</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_THR</spirit:name>
<spirit:description>USIM Transmit Holding Register</spirit:description>
<spirit:addressOffset>0X04</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>USIM1_TB31</spirit:name>
<spirit:description>data byte to be transmitted, least significant bit first</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_IER</spirit:name>
<spirit:description>USIM Interrupt Enable Register</spirit:description>
<spirit:addressOffset>0X08</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>DMA_TX</spirit:name>
<spirit:description>dma transmitter request enable  0 = disabled  1 = enabled</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DMA_RX</spirit:name>
<spirit:description>dma receiver request enable  0 = disabled  1 = enabled</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DMA_TIME</spirit:name>
<spirit:description>enable dma receiver requests in event of time-out situation  0 = disabled  1 = enabled</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SMARTCARD_DET46</spirit:name>
<spirit:description>smartcard detection  0 = disabled  1 = enabled</spirit:description>
<spirit:bitOffset>10</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TDR47</spirit:name>
<spirit:description>transmitter data refill interrupt  0 = disabled  1 = enabled</spirit:description>
<spirit:bitOffset>9</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RDR48</spirit:name>
<spirit:description>receiver data ready interrupt  0 = disabled  1 = enabled</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>USIM1_BWT50</spirit:name>
<spirit:description>block waiting time interrupt  0 = disabled  1 = enabled</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CWT51</spirit:name>
<spirit:description>character waiting time interrupt  0 = disabled  1 = enabled</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TIMEO52</spirit:name>
<spirit:description>receiver time-out interrupt  0 = disabled  1 = enabled</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FRAMERR53</spirit:name>
<spirit:description>framing error interrupt  0 = disabled  1 = enabled</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TOERR54</spirit:name>
<spirit:description>t=0 error interrupt enable  0 = disabled  1 = enabled</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>PERR55</spirit:name>
<spirit:description>parity error interrupt enable  0 = disabled  1 = enabled</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>OVRN56</spirit:name>
<spirit:description>receiver data overrun interrupt enable  0 = disabled  1 = enabled</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_IIR</spirit:name>
<spirit:description>USIM Interrupt Identification Register</spirit:description>
<spirit:addressOffset>0X0C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>SMARTCARD_DET69</spirit:name>
<spirit:description>smartcard detection  0 = no interrupt  1 = interrupt has occurred</spirit:description>
<spirit:bitOffset>10</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TDR70</spirit:name>
<spirit:description>transmitter data refill interrupt  0 = no interrupt  1 = interrupt has occurred</spirit:description>
<spirit:bitOffset>9</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RDR71</spirit:name>
<spirit:description>receiver data ready interrupt  0 = no interrupt  1 = interrupt has occurred</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>USIM1_BWT73</spirit:name>
<spirit:description>block waiting time interrupt  0 = no interrupt  1 = interrupt has occurred</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CWT74</spirit:name>
<spirit:description>character waiting time interrupt  0 = no interrupt  1 = interrupt has occurred</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TIMEO75</spirit:name>
<spirit:description>receiver time out interrupt  0 = no interrupt  1 = interrupt has occurred</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FRAMERR76</spirit:name>
<spirit:description>framing error interrupt  0 = no interrupt  1 = interrupt has occurred</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TOERR77</spirit:name>
<spirit:description>t=0 error interrupt  0 = no interrupt  1 = interrupt has occurred</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>PERR78</spirit:name>
<spirit:description>parity error interrupt  0 = no interrupt  1 = interrupt has occurred</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>OVRN79</spirit:name>
<spirit:description>receiver data overrun interrupt  0 = no interrupt  1 = interrupt has occurred</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_FCR</spirit:name>
<spirit:description>USIM FIFO Control Register</spirit:description>
<spirit:addressOffset>0X10</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>TX_TL</spirit:name>
<spirit:description>transmitter interrupt trigger level (threshold)  sets interrupt/dma request trigger threshold for the tx fifo  0= trigger threshold is 0 bytes  1= trigger threshold is 8 bytes</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RX_TL</spirit:name>
<spirit:description>receiver interrupt trigger level (threshold)  set interrupt/dma request trigger threshold for the rx fifo  0x0 = trigger threshold is 1 byte  0x1 = trigger threshold is 4 bytes  0x2 = trigger threshold is 8 bytes  0x3 = trigger threshold is 12 bytes</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>PEM</spirit:name>
<spirit:description>parity error mask  0 = in t=1 mode only, bit 8 of the usim receive buffer register is asserted when a character with a parity error enters the rx fifo  1 = a parity error coming out of the rx fifo is masked and does not appear on bit 8 of the usim receive buffer register. evidence of a parity error can still be found in</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TX_HOLD</spirit:name>
<spirit:description>transmit hold  when this field is 1, transmission stops after the current character has been transmitted. all the remaining characters in the tx fifo are held. transmission resumes when this bit is cleared to 0.  0 = transmission resumes  1 = transmission is stopped</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>USIM1_RESETTF101</spirit:name>
<spirit:description>reset tx fifo  0 = no effect  1 = tx fifo is cleared</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>USIM1_RESETRF102</spirit:name>
<spirit:description>reset rx fifo  0 = no effect  1 = rx fifo is cleared</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_FSR</spirit:name>
<spirit:description>USIM FIFO Status Register</spirit:description>
<spirit:addressOffset>0X14</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>PERR_NUM</spirit:name>
<spirit:description>parity error number  indicates the number of characters with a parity error in the rx fifo.</spirit:description>
<spirit:bitOffset>10</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TX_LENGTH</spirit:name>
<spirit:description>tx fifo length  indicates the number of characters in the tx fifo.</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RX_LENGTH</spirit:name>
<spirit:description>rx fifo length  indicates the number of characters in the rx fifo.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_ECR</spirit:name>
<spirit:description>USIM Error Control Register</spirit:description>
<spirit:addressOffset>0X18</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>T0_REPEAT</spirit:name>
<spirit:description>repeat character transmission  repeat character transmission until error trigger threshold is met again.  0 = character has been repeated  1 = character repeat in process</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>T0_CLR</spirit:name>
<spirit:description>clear t=0 error  0 = t=0 error has been cleared  1 = clearing of t=0 error in process</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>PE_TL</spirit:name>
<spirit:description>parity error trigger level  0x0 = reception of a single parity error causes an interrupt to occur, if enabled  0x1 = reception of two consecutive parity errors causes an interrupt to occur, if enabled  0x2 = reception of three consecutive parity errors causes an interrupt to occur, if enabled  0x3 = reception of four consecutive parity errors causes an interrupt to occur, if enabled</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>T0ERR_TL</spirit:name>
<spirit:description>t=0 error trigger level (threshold)  0x0 = reception of single t=0 error causes interrupt request and transmission hold  0x1 = reception of two consecutive t=0 errors causes interrupt request and transmission hold  0x2 = reception of three consecutive t=0 errors causes interrupt request and transmission hold  0x3 = reception of a four consecutive t=0 errors causes interrupt request and transmission hold</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_LCR</spirit:name>
<spirit:description>USIM Line Control Register</spirit:description>
<spirit:addressOffset>0X1C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>TX_T1</spirit:name>
<spirit:description>transmitter protocol  0 = t=0 protocol set for the transmitter  1 = t=1 protocol set for the transmitter</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RX_T1</spirit:name>
<spirit:description>receiver protocol  0 = t=0 protocol set for the receiver  1 = t=1 protocol set for the receiver</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>USIM1_EPS148</spirit:name>
<spirit:description>even parity select (eps)  when this field is 0, an odd number of 0b1s are transmitted or checked in the data word bits and the parity bit. when this field is 1, an even number of 0b1s are transmitted or checked in the data word bits and parity bit.  0 = sends or checks for odd parity as required by inverse convention  1 = sends or checks for even parity as required by direct convention  see coding conventions section.</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>ORDER</spirit:name>
<spirit:description>transmit/receive bit order  0 = regular format - lsb of data transmitted/received first (after start bit), msb of data transmitted/received last (and then guard time). this is used in direct convention. see coding conventions section.  1 = inverted format - msb of data transmitted/received first (after start bit), lsb of data transmitted/received last (and then guard time). this is used in inverse convention. see coding conventions section.</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>INVERSE</spirit:name>
<spirit:description>bit inversion  0 = 0b0 transmitted/received as vlow, 0b1 transmitted/received as vhigh. this is used in direct convention. see section 15.4.2.  1 = 0b1 transmitted/received as vlow, 0b0 transmitted/received as vhigh. this is used in inverse convention. see coding conventions section.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_USCCR</spirit:name>
<spirit:description>USIM SmartCard Control Register</spirit:description>
<spirit:addressOffset>0X20</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>TXD_FORCE</spirit:name>
<spirit:description>force txd  this bit always remains 0 unless running a de-activation process. during de-activation, the uio pin (txd) must be forced to vlow before selecting smartcard voltage supply pins to be driven with a lower voltage.  0 = txd indicates transmission  1 = txd is forced to vlow</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>VCC</spirit:name>
<spirit:description>smartcard voltage  0x0 = usim smartcard at 0v (gnd)  0x1= usim smartcard at 3v  0x2 = usim smartcard at 1.8v  0x3 = reserved</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RST_SMARTCARD_N</spirit:name>
<spirit:description>smartcard reset  0 = reset the usim smartcard  1 = normal usim smartcard operation</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_LSR</spirit:name>
<spirit:description>USIM Line Status Register</spirit:description>
<spirit:addressOffset>0X24</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>USIM1_RXD174</spirit:name>
<spirit:description>reflects sampled data from uio pin  0 = uio pin is currently at logic 0b0  1 = uio pin is currently on logic 0b1</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RX_WORKING</spirit:name>
<spirit:description>receiver working  0 = receiver idle  1 = receiver is in process</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TX_WORKING</spirit:name>
<spirit:description>transmitter working  0 = transmitter idle  1 = transmitter in process</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RX_EMPTY_N</spirit:name>
<spirit:description>rx fifo not empty  0 = rx fifo is empty  1 = rx fifo is not empty</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TDR178</spirit:name>
<spirit:description>transmitter data refill  0 = number of characters in the tx fifo is at or above the &lt;transmitter interrupt trigger level (threshold)&gt; field in the usim fifo control register  1 = number of characters in the tx fifo is less than the &lt;transmitter interrupt trigger level (threshold)&gt; field</spirit:description>
<spirit:bitOffset>11</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>USIM1_BWT180</spirit:name>
<spirit:description>block waiting time (bwt)  0 = bwt timeout period is not over  1 = bwt timeout period is over</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CWT181</spirit:name>
<spirit:description>character waiting time (cwt)  0 = cwt timeout period is not over  1 = cwt timeout period is over</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TIMEO182</spirit:name>
<spirit:description>receiver time out  0 = tor timeout period is not over  1 = tor timeout period is over</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FRAMERR183</spirit:name>
<spirit:description>framing error  0 = framing error has not occurred  1 = framing error has occurred</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TOERR184</spirit:name>
<spirit:description>t=0 error  0 = during transmission, the number of consecutive t=0 errors did not meet the repetition trigger level, &lt;t=0 error trigger level (threshold)&gt; field in the usim error control register  1 = during transmission, the number of consecutive t=0 errors met the repetition trigger level, &lt;t=0 error trigger level (threshold)&gt; field</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>PERR185</spirit:name>
<spirit:description>parity error  0 = during reception, the number of consecutive parity errors did not met the repetition trigger threshold, &lt;parity error trigger level&gt; field in the usim error control register  1 = during reception, the number of consecutive parity errors met the repetition trigger threshold, &lt;parity error trigger level&gt;</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>OVRN186</spirit:name>
<spirit:description>receiver data overrun error  0 = overrun error has not occurred  1 = overrun error has occurred</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_EGTR</spirit:name>
<spirit:description>USIM Extra Guard Time Register</spirit:description>
<spirit:addressOffset>0X28</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>EGTM</spirit:name>
<spirit:description>extra guard time moments  number of extra guard time moments, 0 to 255.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_BGTR</spirit:name>
<spirit:description>USIM Block Guard Time Register</spirit:description>
<spirit:addressOffset>0X2C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>BGT</spirit:name>
<spirit:description>block guard time  number of total block-guard time moments.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_TOR</spirit:name>
<spirit:description>USIM Time-Out Register</spirit:description>
<spirit:addressOffset>0X30</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>TO</spirit:name>
<spirit:description>time out  number of total timeout moments.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_CLKR</spirit:name>
<spirit:description>USIM Clock Register</spirit:description>
<spirit:addressOffset>0X34</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>STOP_CLK_USIM</spirit:name>
<spirit:description>stop usim controller internal clock  0 = starts the usim controller internal clock, clk_usim  1 = stops the usim controller internal clock. does not stop the clock that controls the usim controller registers.</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>STOP_LEVEL</spirit:name>
<spirit:description>stop level  0 = uclk stops on low  1 = uclk stops on high</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>STOP_UCLK</spirit:name>
<spirit:description>stop smartcard clock  0 = starts the uclk clock  1 = stops the uclk clock</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RQST</spirit:name>
<spirit:description>clock change request  0 = request not occurring, this register may be updated  1 = request occurring, do not update this register</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DIVISOR246</spirit:name>
<spirit:description>clock divisor  the uclk frequency is 48 mhz/divisor. a value of 0x0 results in unpredictable behavior.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_DLR</spirit:name>
<spirit:description>USIM Divisor Latch Register</spirit:description>
<spirit:addressOffset>0X38</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>DIVISOR257</spirit:name>
<spirit:description>baud divisor  determines the number of internal usim cycles between samples, forcing the total length of a bit to be divisor*(factor+1)*(usim_cycle). the value of divisor must not be set to 0x0.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>16</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_FLR</spirit:name>
<spirit:description>USIM Factor Latch Register</spirit:description>
<spirit:addressOffset>0X3C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>FACTOR</spirit:name>
<spirit:description>baud factor  determines the number of samples per bit. number of samples would be (factor + 1). iso standard demands minimum of 6 samples, therefore, 5 is the minimum value for this field.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_CWTR</spirit:name>
<spirit:description>USIM Character Waiting Time Register</spirit:description>
<spirit:addressOffset>0X40</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CWT277</spirit:name>
<spirit:description>character waiting time  number of total character waiting-time moments</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>16</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>USIM_BWTR</spirit:name>
<spirit:description>USIM Block Waiting Time Register</spirit:description>
<spirit:addressOffset>0X44</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>USIM1_BWT287</spirit:name>
<spirit:description>block waiting time  number of total block waiting-time moments</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>16</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
</spirit:addressBlock>
</spirit:memoryMap>
</spirit:memoryMaps>
</spirit:component>