<?xml version="1.0" encoding="UTF-8"?>
	<spirit:component xmlns:kactus2="http://funbase.cs.tut.fi/" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5 http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5/index.xsd">
		<spirit:vendor>org.example</spirit:vendor>
		<spirit:library>example_lib</spirit:library>
		<spirit:name>pmucp</spirit:name>
		<spirit:version>example_version</spirit:version>
<spirit:memoryMaps>
<spirit:memoryMap>
<spirit:name>some_register_map</spirit:name>
<spirit:displayName>RDL Example Registers</spirit:displayName>
<spirit:addressBlock>
<spirit:name>some_register_map</spirit:name>
<spirit:displayName>ASR Module Registers</spirit:displayName>
<spirit:description>This address map contains some example registers to show how RDL can be utilized in various situations.</spirit:description>
<spirit:baseAddress>0xD0201800</spirit:baseAddress>
<spirit:range>0x2000</spirit:range>
<spirit:width>32</spirit:width>
<spirit:usage> </spirit:usage>
<spirit:volatile>true</spirit:volatile>
<spirit:register>
<spirit:name>STIKY_CLR0</spirit:name>
<spirit:description>AIRQ Interrupt Clear 0 Register</spirit:description>
<spirit:addressOffset>0X0</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_AIRQ_INT_CLR_013</spirit:name>
<spirit:description>airq interrupt clear 0  to clear the interrupt sticky-bit, write 1.  there is no need to write 0, since the register clears itself (one-shot).  when level interrupt function is selected, these registers have no effect.  bit [0] refers to interrupt 0, bit [1] refers to interrupt 1, etc.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>32</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>STIKY_CLR1</spirit:name>
<spirit:description>AIRQ Interrupt Clear 1 Register</spirit:description>
<spirit:addressOffset>0X4</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_AIRQ_INT_CLR_121</spirit:name>
<spirit:description>airq interrupt clear 1  to clear the interrupt sticky-bit, write 1.  there is no need to write 0, since the register clears itself (one-shot).  when level interrupt function is selected, these registers have no effect.  bit [0] refers to interrupt 32, bit [1] refers to interrupt 33, etc.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>32</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EDGE_OR_LEVEL0</spirit:name>
<spirit:description>AIRQ Interrupt Sensitivity 0 Register</spirit:description>
<spirit:addressOffset>0X08</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_AIRQ_EDGE_LEVEL_029</spirit:name>
<spirit:description>airq edge level 0  0 = originally level-sensitive interrupt (no sticky bit needed)  1 = originally edge-sensitive interrupt (sticky bit needed)  bit [0] refers to interrupt 0, bit [1] refers to interrupt 1, etc.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>32</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EDGE_OR_LEVEL1</spirit:name>
<spirit:description>AIRQ Interrupt Sensitivity 1 Register</spirit:description>
<spirit:addressOffset>0X0C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_AIRQ_EDGE_LEVEL_137</spirit:name>
<spirit:description>airq edge level 1  0 = originally level-sensitive interrupt (no sticky bit needed)  1 = originally edge-sensitive interrupt (sticky bit needed)  bit [0] refers to interrupt 32, bit [1] refers to interrupt 33, and so on.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>32</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EDGE_OR_LEVEL2</spirit:name>
<spirit:description>AIRQ Interrupt Sensitivity 1 Register</spirit:description>
<spirit:addressOffset>0X10</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>AIRQ_EDGE_LEVEL_2</spirit:name>
<spirit:description>airq edge level 1  0 = originally level-sensitive interrupt (no sticky bit needed)  1 = originally edge-sensitive interrupt (sticky bit needed)  bit [0] refers to interrupt 64, bit [1] refers to interrupt 65, and so on.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>16</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>STIKY_CLR2</spirit:name>
<spirit:description>AIRQ Interrupt Clear 2 Register</spirit:description>
<spirit:addressOffset>0X18</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>AIRQ_INT_CLR_2</spirit:name>
<spirit:description>airq interrupt clear 1  to clear the interrupt sticky-bit, write 1.  there is no need to write 0, since the register clears itself (one-shot).  when level interrupt function is selected, these registers have no effect.  bit [0] refers to interrupt 64, bit [1] refers to interrupt 65, etc.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>16</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DDR_REQ_CTRL_SG</spirit:name>
<spirit:description>DDR Request Control Register for &lt;var Processor: Comm&gt;</spirit:description>
<spirit:addressOffset>0X0020</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>DDRC_RDY_EN61</spirit:name>
<spirit:description>  1 = 1= axi transactions to ddrc are sent without considering ddrc's status   0 =  0= axi transactions to ddrc are only sent when ddrc is ready</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_62</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>21</spirit:bitOffset>
<spirit:bitWidth>10</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FBDMA_DDRC_REQ_EN63</spirit:name>
<spirit:description>  0x1= if fb dma is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because fb dma's is active</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DTC_DDRC_REQ_EN64</spirit:name>
<spirit:description>  0x1= if dtc is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because dtc's is active</spirit:description>
<spirit:bitOffset>19</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CPDMA_DDRC_REQ_EN65</spirit:name>
<spirit:description>  0x1= if cp dma is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because cp dma is actvie</spirit:description>
<spirit:bitOffset>18</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MSA_DDRC_REQ_EN66</spirit:name>
<spirit:description>  0x1= if msa is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because msa is active</spirit:description>
<spirit:bitOffset>17</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SG_DDRC_REQ_EN67</spirit:name>
<spirit:description>  0x1= if &lt;var processor: comm&gt; is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because &lt;var processor: comm&gt; is active</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>GSM_DDRC_REQ_EN68</spirit:name>
<spirit:description>  0x1= if gsm is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because gsm is active</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_69</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FB_MODEM_DDRC_REQ_EN70</spirit:name>
<spirit:description>  0x1= if modem is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because modem is active</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>PWR_MODE_DDRC_REQ_EN71</spirit:name>
<spirit:description>  0x1= if pwr_mode is 2'b00, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because pwr_mode is 2'b00</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_72</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DTCMSD73</spirit:name>
<spirit:description>ddr is ready for cp access   1 = ddr is ready &lt;0&gt;ddr is not ready</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_74</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>SG_SLEEP_CTRL</spirit:name>
<spirit:description>&lt;var Processor: Comm&gt; Sleep Control Register</spirit:description>
<spirit:addressOffset>0X0024</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>WAKEUP_GLOBAL_MASK</spirit:name>
<spirit:description>0 =  enable wakeup source; 1 = cp wakeup source disabled. this bit should be set before issue wfi with sg_idle_cfg[1 or 0] set, and it will be auto-cleared after cp enters either external_clock_gating or power_down mode</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP_GLOBAL_MASK2</spirit:name>
<spirit:description>0 =  enable wakeup source; 1 = cp wakeup source disabled. this bit should be set before issue wfi with sg_idle_cfg[1 or 0] set, and it will be auto-cleared after cp enters either external_clock_gating or power_down mode. this is intended to be used with firq, but are not needed right now.</spirit:description>
<spirit:bitOffset>30</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_84</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>14</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_85</spirit:name>
<spirit:description>reserved for future use</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>16</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>MSA_RST</spirit:name>
<spirit:description>MSA Reset Register</spirit:description>
<spirit:addressOffset>0X0028</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>MSA_IDLE</spirit:name>
<spirit:description>msa in idle or not   0x1=msa is in idle</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MSA_LPM_VOTE</spirit:name>
<spirit:description>msa vote for sleep,   0x0= normal   0x1=d2 mode   0x2=d2 with control from modem  11= reserved</spirit:description>
<spirit:bitOffset>29</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FB_DMA_BUSY</spirit:name>
<spirit:description>fb dma is busy or not</spirit:description>
<spirit:bitOffset>28</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MSA_RST_STATUS</spirit:name>
<spirit:description>msa reset status    0x0= msa is released from reset   0x1= msa is in reset</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MSA_SILENT_RST_MODE</spirit:name>
<spirit:description>enable or disable silent reset mode. combined to be used with bit1.   0x0=silent reset mode is disabled   0x1=silent reset mode is enabled</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MSA_SW_RST</spirit:name>
<spirit:description>msa software reset. write 1 to this bit to reset msa subsystem   0x0=release msa subsystem from reset   0x1=reset msa subsystem.when bit2 is 1, silent reset msa subsystem. when bit2 is 0, immediate reset msa subsystem</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MSA_RST_HOLD</spirit:name>
<spirit:description>reset hold control upon wakeup   =0x0 msa will be released from reset after wakeup   =0x1 msa will be hold in reset state after wakeup</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>SG_INT_REG</spirit:name>
<spirit:description>&lt;var Processor: Comm&gt; interrupt selection register</spirit:description>
<spirit:addressOffset>0X002C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_106</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>30</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_107</spirit:name>
<spirit:description>when this bit is 1,mark the frq to &lt;var processor: comm&gt; from airq</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_108</spirit:name>
<spirit:description>when this bit is 1, mark the irq to &lt;var processor: comm&gt; from airq</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CPSS_HW_GATE_CTRL_SG</spirit:name>
<spirit:description>CPSS Hardware Clock Gating Control for &lt;var Processor: Comm&gt;</spirit:description>
<spirit:addressOffset>0X0034</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_116</spirit:name>
<spirit:description>reserved</spirit:description>
<spirit:bitOffset>23</spirit:bitOffset>
<spirit:bitWidth>9</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_117</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>22</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_118</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>21</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_119</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_120</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>19</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_121</spirit:name>
<spirit:description>not used</spirit:description>
<spirit:bitOffset>18</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_122</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>17</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_123</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_124</spirit:name>
<spirit:description>reserved</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_125</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_126</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_127</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_128</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>11</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_129</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>10</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_130</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>9</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_131</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_132</spirit:name>
<spirit:description>reserved</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_133</spirit:name>
<spirit:description>reserved</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_134</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_135</spirit:name>
<spirit:description>not used</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_136</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_137</spirit:name>
<spirit:description>must be set to 1 or deadlock</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_138</spirit:name>
<spirit:description>   0x1= clock enabled    0x0= clock disabled</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_139</spirit:name>
<spirit:description>must be set to 1 or deadlock</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>AP_status_reg</spirit:name>
<spirit:description>AP FSM Status Register</spirit:description>
<spirit:addressOffset>0X0038</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_146</spirit:name>
<spirit:description>1 is audio on</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_147</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>25</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_148</spirit:name>
<spirit:description>the power status for ap-: 
bit [5] is always &quot;0&quot;
0: ap reset,
1: idle(normal operation)
5'b01011:wakup sp,
2: dma idle,
4: disable bus,
5: clock gate,
3: memory controller idle,
7: ap sleep,
5'b10011: ap d2</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>6</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>SG__TIMER</spirit:name>
<spirit:description>&lt;var Processor: Comm&gt;  Timer Register</spirit:description>
<spirit:addressOffset>0X048</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_PWR_CLK_PRE156</spirit:name>
<spirit:description>clock divider prescaler for the timer count.  0 = divider by one.  1 = divide by 1.  2= divider by 2.&gt;p&gt; rest incremental divider.</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_PWR_UP_STBL_TIMER157</spirit:name>
<spirit:description>power up stable timer  stable time for the power up during core idle mode in 26 mhz unit</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_PWR_DWN_STBL_TIMER158</spirit:name>
<spirit:description>power down stable timer  stable time for the power down during core idle mode in 26 mhz unit</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>SG_IDLE_CFG</spirit:name>
<spirit:description>&lt;var Processor: Comm&gt; Idle  Configuration Register</spirit:description>
<spirit:addressOffset>0X04C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_PSW_MODE166</spirit:name>
<spirit:description>cr5 core has both big macro power switch and distributed power switch. this field select different power swith mode    2'b00 both big macro switches and distributed switches will be used. during power up – first power up the big macro switches followed by distributed switches.during power down – first power down the distributed switches followed by big macro switches.    2'b01 only big macro switch is used. distributed switches will be permanently shut off    2'b10 only distributed switches in the core is used and big macro switches will be off. distributed switches turn on simultaneously which will cause a big power surge. to reduce the power surge, first turn on all the big macro switches, then turn on distributed switches and finally turn off the big macro switches leaving only the distributed switches on</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DIS_CORE_L2_SLP</spirit:name>
<spirit:description>disable the core l2 sram power switch sleep power down during core power down mode.  1 = disable core l2 power switch sleep.</spirit:description>
<spirit:bitOffset>19</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DIS_CORE_L1_SLP168</spirit:name>
<spirit:description>disable the core l1 sram power switch sleep power down during core power down mode.  1 = disable core l1 power switch sleep.</spirit:description>
<spirit:bitOffset>18</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DIS_CORE_SLP169</spirit:name>
<spirit:description>disable the core power switch sleep power down during core power down mode.  1 = disable core power switch sleep</spirit:description>
<spirit:bitOffset>17</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_MASK_CLK_OFF_CHECK171</spirit:name>
<spirit:description>mask core clock off  check during core idle process.</spirit:description>
<spirit:bitOffset>11</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_MASK_CLK_STBL_CHECK172</spirit:name>
<spirit:description>mask core clock stable check during core wakeup.</spirit:description>
<spirit:bitOffset>10</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_MASK_JTAG_IDLE_CHECK173</spirit:name>
<spirit:description>mask the jtag idle check during mp idle entry   1 = mask the jtag idle check.</spirit:description>
<spirit:bitOffset>9</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_MASK_CORE_WFI_IDLE_CHECK174</spirit:name>
<spirit:description>debug only - it should be 0 during normal opration
mask core wfi idle check   1 = status check masked  0 = status check not masked</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DIS_MC_SW_REQ176</spirit:name>
<spirit:description>disable the mc entry to idle mode using the mc sleep request bits. mc will always enter into idle mode based on the hardware sm request.  0 = enable the idle entry using sw register bits.  1 = disable the idle entry using the sw register bits.</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_SEA_MC_WAKE_EN177</spirit:name>
<spirit:description>wake up the mc when &lt;var processor: comm&gt; wake up from core idle mode. mc will be waked up before the interrupt to the core is released.  0 = mc wake disabled.  1 = mc wake up enabled on &lt;var processor: comm&gt; wake.</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CORE_L2_SRAM_PWRDWN</spirit:name>
<spirit:description>l2 is powered off or not when core is powered off &lt;0&gt; l2 is retained &lt;1&gt; l2 is powered off</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CORE_L1_SRAM_PWRDWN179</spirit:name>
<spirit:description>l1 is powered off or not when core is powered off &lt;0&gt; l1 is retained &lt;1&gt; l1 is powered off</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CORE_PWRDWN180</spirit:name>
<spirit:description>core power down. this bit does not takes effect if core_idle is 0.   1 = when core issue wfi idle, core will go into deep sleep mode and power will be turned off. this bit will not take effect  if cap dbgnopwrdwn is set</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CORE_IDLE181</spirit:name>
<spirit:description>core idle  1 = when core issue wfi idle, the core clock will be gated externally. this bit will not take effect if cr5 dbgnopwrdwn is set</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>AXISD_HW_SG</spirit:name>
<spirit:description>AXISD HW Control Register</spirit:description>
<spirit:addressOffset>0X070</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_279</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>24</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SG_AXISD_CTRL280</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if &lt;var processor: comm&gt; is active, do not allow axi shut down&lt;p&gt;0x0 = do not care &lt;var processor: comm&gt;'s status</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MSA_AXISD_CTRL281</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if msa is active, do not allow axi shut down&lt;p&gt;0x0 = do not care msa's status</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_DMAC_AXISD_CTRL282</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if cp dmac is active, do not allow axi shut down&lt;p&gt;0x0 = do not care cp dmac's status</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DTC_AXISD_CTRL283</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if dtc is active, do not allow axi shut down&lt;p&gt;0x0 = do not care dtc's status</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>PWR_MODE_AXISD_CTRL284</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if pwr_mode is 2'b00, do not allow axi shut down&lt;p&gt;0x0 = do not care pwr_mode</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FB_DMAC_AXISD_CTRL285</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if fb dmac is active, do not allow axi shut down&lt;p&gt;0x0 = do not care fb dmac's status</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FB_AXISD_CTRL286</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if fb modem is active, do not allow axi shut down&lt;p&gt;0x0 = do not care fb modem's status</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>GSM_AXISD_CTRL287</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if gsm is active, do not allow axi shut down&lt;p&gt;0x0 = do not care gsm's status</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CP_ACLKDIV_HW_CTRL</spirit:name>
<spirit:description>CPSS Fabric ACLK Clock Divider HW Control</spirit:description>
<spirit:addressOffset>0X074</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_294</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>28</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SW_ACLKDIV_DIS_VOTE</spirit:name>
<spirit:description>cp fabric clock divider auto disable sw    0x1 = sw allow cp fabric clock divider to be automatically disabled by hw     0x0 = sw disallow cp fabric clock divider to be automatically disabled by hw</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CPDMA_ACLKDIV_DIS_VOTE</spirit:name>
<spirit:description>cp fabric clock divider auto disable when msa is c2/d2    0x1 = when seagull is in c2/d2, cp fabric clock divider is automatically disabled</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MSA_ACLKDIV_DIS_VOTE</spirit:name>
<spirit:description>cp fabric clock divider auto disable when msa is c2/d2    0x1 = when seagull is in c2/d2, cp fabric clock divider is automatically disabled</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SG_ACLKDIV_DIS_VOTE</spirit:name>
<spirit:description>cp fabric clock divider auto disable when seagull is c2/d2    0x1 = when seagull is in c2/d2, cp fabric clock divider is automatically disabled</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DVC_CP</spirit:name>
<spirit:description>&lt;var Processor: Comm&gt; Dynamic Voltage Change Register</spirit:description>
<spirit:addressOffset>0X080</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>VC_INT305</spirit:name>
<spirit:description>dvc interrupt status   0x1=dvc interrupt   0x0=no dvc interrupt</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>VC_INT_EN306</spirit:name>
<spirit:description>enable/disable dvc interrupt   0x0=disabled    0x1=enabled</spirit:description>
<spirit:bitOffset>30</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>VC_INT_CLR307</spirit:name>
<spirit:description>clear the dvc interrupt.this bit is auto cleared when interrupt is cleared   0x1= clear interrupt</spirit:description>
<spirit:bitOffset>29</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LPM_D2_AVC_EN</spirit:name>
<spirit:description>automatic voltage change enable in low power mode  0 = automatic voltage change is disabled  1 = automatic voltage change is enabled  when comm_top enters or exits d2 mode,  hardware automatically triggers a voltage change request</spirit:description>
<spirit:bitOffset>23</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LPM_D2_VL3:0</spirit:name>
<spirit:description>required voltage level by  in d2 low power mode</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>VC_REQ312</spirit:name>
<spirit:description>voltage change request in active mode  software can write 1 to this bit to trigger a voltage change request. hardware will automaticly clear this bit when dvc is done. writes of 0 to this bit are ignored.</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>VL3:0314</spirit:name>
<spirit:description>voltage level in active mode  required voltage level by &lt;var processor: comm&gt; in active mode  this voltage level can be dynamically changed due to a frequency change.</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LPM_C2_AVC_EN</spirit:name>
<spirit:description>automatic voltage change enable in low power mode  0 = automatic voltage change is disabled  1 = automatic voltage change is enabled  when &lt;var processor: comm&gt; enters or exit c2 mode,  hardware automatically triggers a voltage change request</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LPM_C2_VL3:0</spirit:name>
<spirit:description>required voltage level  in cp c2 low power mode</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DVC_DP</spirit:name>
<spirit:description></spirit:description>
<spirit:addressOffset>0X084</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>VC_INT323</spirit:name>
<spirit:description>dvc interrupt status   0x1=dvc interrupt   0x0=no dvc interrupt</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>VC_INT_EN324</spirit:name>
<spirit:description>enable/disable dvc interrupt   0x0=disabled    0x1=enabled</spirit:description>
<spirit:bitOffset>30</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>VC_INT_CLR325</spirit:name>
<spirit:description>clear the dvc interrupt.this bit is auto cleared when interrupt is cleared   0x1= clear interrupt</spirit:description>
<spirit:bitOffset>29</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>VC_REQ327</spirit:name>
<spirit:description>voltage change request in active mode  software can write 1 to this bit to trigger a voltage change request. hardware will automaticly clear this bit when dvc is done. writes of 0 to this bit are ignored.</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>VL3:0329</spirit:name>
<spirit:description>voltage level in active mode  required voltage level by msa in active  mode  this voltage level can be dynamically changed due to a frequency change.</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_LPM_AVC_EN330</spirit:name>
<spirit:description>automatic voltage change enable in low power mode  0 = automatic voltage change is disabled  1 = automatic voltage change is enabled  when msa enters or exit c2 mode,  hardware automatically triggers a voltage change request</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_LPM_VL3:0332</spirit:name>
<spirit:description>required voltage level  in dp c2 low power mode</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DVC_STATUS</spirit:name>
<spirit:description>Dynamic Voltage Change Status Register</spirit:description>
<spirit:addressOffset>0X088</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_CAUSE340</spirit:name>
<spirit:description>dvc cause  this field is the cause of the current ongoing dvc. it is only valid when the &lt;voltage change status&gt; field is 1.   0x1 = &lt;var processor: application mp&gt; software-triggered dvc  0x2 = &lt;var processor: comm&gt; software- triggered dvc   0x4 = &lt;var processor: msa&gt; software- triggered dvc    0x8 = hw-dfc triggered dvc    others = lpm entry/exit trigger dvc</spirit:description>
<spirit:bitOffset>24</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_TVL3:0342</spirit:name>
<spirit:description>target voltage level of vcc_main</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CVL3:0344</spirit:name>
<spirit:description>current voltage level of vcc_main</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DVC_STATUS346</spirit:name>
<spirit:description>voltage change status  the voltage change may be triggered in active state or entering low power mode.  0 = there is no voltage change or a voltage change has finished  1 = voltage change is in progress</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DFC_CP</spirit:name>
<spirit:description>&lt;var Processor: Comm&gt; DCLK Dynamic Freq Change Control Register</spirit:description>
<spirit:addressOffset>0X90</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>DFC_INT353</spirit:name>
<spirit:description>dfc interrupt status   0x1=dfc interrupt   0x0=no dfc interrupt</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DFC_INT_EN354</spirit:name>
<spirit:description>enable/disable dfc interrupt   0x0=disabled    0x1=enabled</spirit:description>
<spirit:bitOffset>30</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DFC_INT_CLR355</spirit:name>
<spirit:description>clear the dfc interrupt. this bit is auto cleared when interrupt is cleared   0x1= clear interrupt</spirit:description>
<spirit:bitOffset>29</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DCLK_FC_VOTE357</spirit:name>
<spirit:description>dfc/dclk frequency change voting bits   0x1 = cp allows dclk /dfc frequency change   0x0 = cp disallows dclk /dfc frequency change</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LPM_D2_FL</spirit:name>
<spirit:description>required dclk freq level by comm_top d2 low power mode</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LPM_C2_FL</spirit:name>
<spirit:description>required dclk freq level by &lt;var processor: comm&gt; c2 low power mode</spirit:description>
<spirit:bitOffset>9</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LPM_C2_DFC_EN</spirit:name>
<spirit:description>dclk hardware freq change enable upon c2 low power mode exit/entry   0 = dclk hw-dfc is disabled upon c2 mode entry/exit  1 = dclk hw-dfc is enabled upon c2 mode entry/exit</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LPM_D2_DFC_EN</spirit:name>
<spirit:description>dclk hardware freq change enabled upon comm_top d2 low power mode exit/entry   0 = dclk hw-dfc is disabled upon comm_top d2 mode entry/exit  1 = dclk hw-dfc is enabled upon comm_top d2 mode entry/exit</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_FL363</spirit:name>
<spirit:description>dclk freq level in active mode  required dclk freq level by &lt;var processor: comm&gt; in ative mode</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DFC_REQ364</spirit:name>
<spirit:description>dclk dfc request in active mode   dclk dfc for &lt;var processor: comm&gt; in active  mode  software can write 1 to this bit to trigger a dclk dfc request. hardware will automaticly clear this bit when dfc is done. writes of 0 to this bit are ignored.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DFC_DP</spirit:name>
<spirit:description>&lt;var Processor: MSA&gt; DCLK Dynamic Freq Change Control Register</spirit:description>
<spirit:addressOffset>0X94</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>DFC_INT371</spirit:name>
<spirit:description>dfc interrupt status   0x1=dfc interrupt   0x0=no dfc interrupt</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DFC_INT_EN372</spirit:name>
<spirit:description>enable/disable dfc interrupt   0x0=disabled    0x1=enabled</spirit:description>
<spirit:bitOffset>30</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DFC_INT_CLR373</spirit:name>
<spirit:description>clear the dfc interrupt. this bit is auto cleared when interrupt is cleared   0x1= clear interrupt</spirit:description>
<spirit:bitOffset>29</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DCLK_FC_VOTE375</spirit:name>
<spirit:description>dfc/dclk frequency change voting bits   0x1 = &lt;var processor: msa&gt; allows dclk /dfc frequency change   0x0 = &lt;var processor: msa&gt; disallows dclk /dfc frequency change</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LPM_FL</spirit:name>
<spirit:description>required dclk freq level by &lt;var processor: seagull/msa&gt; in c2 low power mode</spirit:description>
<spirit:bitOffset>9</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LPM_DFC_EN</spirit:name>
<spirit:description>dclk hardware freq change enable upon low power mode exit/entry   0 = dclk dfc is disabled upon c2 mode entry/exit  1 = dclk dfc request is enabled. when both &lt;var processor: comm&gt; and msa enters c2 mode or when either &lt;var processor: comm&gt; or msa exits c2 mode, dfc request will automatically be triggered</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_FL380</spirit:name>
<spirit:description>dclk freq level in active mode  required dclk freq level by &lt;var processor: comm&gt; in ative mode</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DFC_REQ381</spirit:name>
<spirit:description>dclk dfc request in active mode   dclk dfc for &lt;var processor: comm&gt; in active  mode  software can write 1 to this bit to trigger a dclk dfc request. hardware will automaticly clear this bit when dfc is done. writes of 0 to this bit are ignored.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DFC_STATUS</spirit:name>
<spirit:description>DCLK Hardware Freq Change Status Register</spirit:description>
<spirit:addressOffset>0X098</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_DFC_CAUSE389</spirit:name>
<spirit:description>dclk dfc cause  this field is the cause of the current ongoing dfc. it is only valid when the &lt;dclk_dfc_status&gt; field is 1.   0x1 = &lt;var processor: application mp&gt; triggered dfc  0x2 = &lt;var processor: comm&gt;  triggered dfc in active mode  0x4 = &lt;var processor: msa&gt;  triggered dfc in active mode   others   = lpm entry/exit trigger dfc</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_TFL390</spirit:name>
<spirit:description>target freq level of dclk</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>7</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CFL391</spirit:name>
<spirit:description>current freq level of dclk</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>7</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DFC_STATUS392</spirit:name>
<spirit:description>dclk dfc status  the dclk dfc may be triggered in active state or &lt;var processor: seagull/msa&gt; entering low power mode.  0 = there is no dfc or dfc has finished  1 = dfc is in progress</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>_DEBUG</spirit:name>
<spirit:description> Debug Register</spirit:description>
<spirit:addressOffset>0X09C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>MASK_DVC_CHECK</spirit:name>
<spirit:description>mask dvc check in por13 state machine   0 = check is enabled   1 = check is disabled</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MASK_SG_IDLE_CHECK</spirit:name>
<spirit:description>mask &lt;var processor: comm&gt; idle check in por13 state machine   0 = check is enabled   1 = check is disabled</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CP_S_GATE_CTRL</spirit:name>
<spirit:description>cp source clock gating</spirit:description>
<spirit:addressOffset>0X00A0</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_408</spirit:name>
<spirit:description>reserved</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>27</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_409</spirit:name>
<spirit:description>1: disable 499m source clock when d2</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_410</spirit:name>
<spirit:description>1: disable 624m source clock when d2</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_411</spirit:name>
<spirit:description>1: disable 832m source clock when d2</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_412</spirit:name>
<spirit:description>1:disable 416m source clock when d2</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_413</spirit:name>
<spirit:description>1:disable 312m source clock when d2</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CR7_INIT_CFG</spirit:name>
<spirit:description>CR7 init configuration</spirit:description>
<spirit:addressOffset>0X00A4</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_420</spirit:name>
<spirit:description>reserved</spirit:description>
<spirit:bitOffset>22</spirit:bitOffset>
<spirit:bitWidth>10</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CPUCLKOFF_MASK</spirit:name>
<spirit:description>   1 = enable cpuclkoff control during cpu boot.    0 = cpuclkoff never asserted during cpu boot</spirit:description>
<spirit:bitOffset>21</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DBGCLKOFF_MASK</spirit:name>
<spirit:description>   1 = enable dbgclkoff control    0 = dbgclkoff never asserted during cpu boot</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CFGEND423</spirit:name>
<spirit:description>cr7 cfgend input</spirit:description>
<spirit:bitOffset>19</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CFGEND424</spirit:name>
<spirit:description>cr7 cfgnmfi input</spirit:description>
<spirit:bitOffset>18</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_VINITHI425</spirit:name>
<spirit:description>cr7 vinithi input</spirit:description>
<spirit:bitOffset>17</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>INITRAM0</spirit:name>
<spirit:description>cr7 initram0 input</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_TEINIT427</spirit:name>
<spirit:description>cr7 teinit input</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DBGEN428</spirit:name>
<spirit:description>cr7 dbgen input</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_NIDEN429</spirit:name>
<spirit:description>cr7 niden input</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>L2C_S1_CLKEN</spirit:name>
<spirit:description>this bit must be set to 0 when cr7 configure the pl310.</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_SPNIDEN431</spirit:name>
<spirit:description>cr7 spniden input</spirit:description>
<spirit:bitOffset>11</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_432</spirit:name>
<spirit:description>reserved</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>11</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CSWER</spirit:name>
<spirit:description>Communication Subsystem general purpose wakeup enable</spirit:description>
<spirit:addressOffset>0X00A8</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_441</spirit:name>
<spirit:description>allow ripc interrupts as wakeup source   1 = allow ripc interrupt as wakeup source when cwesr_wake_en is asserted &lt;0&gt;not allow ripc interrupt as wakeup source</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_442</spirit:name>
<spirit:description>allow cp timer3 interrupt as wakeup source   1 = allow cp timer3 interrupt as wakeup source when cwesr_wake_en is asserted &lt;0&gt;not allow cp timer3 interrupt as wakeup source</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_443</spirit:name>
<spirit:description>allow cp timer2 interrupt as wakeup source   1 = allow cp timer2 interrupt as wakeup source when cwesr_wake_en is asserted &lt;0&gt;not allow cp timer2 interrupt as wakeup source</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_444</spirit:name>
<spirit:description>allow dap as wakeup source   1 = allow dap as wakeup source when cwesr_wake_en is asserted &lt;0&gt;not allow dap as wakeup source</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_445</spirit:name>
<spirit:description>allow gpio as wakeup source   1 = allow gpio as wakeup source when cwesr_wake_en is asserted &lt;0&gt;not allow gpio as wakeup source</spirit:description>
<spirit:bitOffset>11</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_446</spirit:name>
<spirit:description>allow icusb as wakeup source   1 = allow icusb as wakeup source when cwesr_wake_en is asserted &lt;0&gt;not allow icusb timer interrupt as wakeup source</spirit:description>
<spirit:bitOffset>10</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_448</spirit:name>
<spirit:description>allow airq interrupt as wakeup source   1 = allow airq interrupt as wakeup source when cwesr_wake_en is asserted &lt;0&gt;not allow airq timer interrupt as wakeup source</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_449</spirit:name>
<spirit:description>allow ipc interrupt from ap as wakeup source   1 = allow ipc interrupt from ap as wakeup source when cwesr_wake_en is asserted &lt;0&gt;not allow ipc interrupt from ap as wakeup source</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_450</spirit:name>
<spirit:description>allow cp timer1 interrupt as wakeup source   1 = allow cp timer1 interrupt as wakeup source when cwesr_wake_en is asserted &lt;0&gt;not allow cp timer1 interrupt as wakeup source</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_451</spirit:name>
<spirit:description>allow pmic interrupt as wakeup source   1 = allow pmic interrupt as wakeup source when cwesr_wake_en is asserted &lt;0&gt;not allow pmic interrupt as wakeup source</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_452</spirit:name>
<spirit:description>allow soc watchdog as wakeup source   1 = allow soc watchdog as wakeup source when cwesr_wake_en is asserted &lt;0&gt;not allow soc watchdog as wakeup source</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_454</spirit:name>
<spirit:description>allow cgpio as wakeup source   1 = allow cgpio as wakeup source when cwesr_wake_en is asserted &lt;0&gt;not allow cgpio as wakeup source</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CSWCR</spirit:name>
<spirit:description>Communication Subsystem general wakeup global enable</spirit:description>
<spirit:addressOffset>0X00AC</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>RESET_WAKEUP_EVENT</spirit:name>
<spirit:description>reset the maskable wakeup events to cp_  1 = wakeup events are reset   0 = wakeup events are kept</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CWESR_WAKE_EN</spirit:name>
<spirit:description>the global wake enable signal for general purpose wakeup events   1 = enabled   0 = disabled</spirit:description>
<spirit:bitOffset>30</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>D2_EXIT_STICKY_CLR</spirit:name>
<spirit:description>  1 = clear d2_exit_sticky</spirit:description>
<spirit:bitOffset>29</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>D2_EXIT_STICKY</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>28</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CAPTURED_UWU</spirit:name>
<spirit:description>status of un-maskable wakeup sources</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_469</spirit:name>
<spirit:description>status of ripc wakeup</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>C_TIMER_3_IRQ</spirit:name>
<spirit:description>status of c timer3 wakeup</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>C_TIMER_2_IRQ</spirit:name>
<spirit:description>status of c timer2 wakeup</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_472</spirit:name>
<spirit:description>status of dap wakeup</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>M1_GPIO_INT_CP</spirit:name>
<spirit:description>status of gpio wakeup</spirit:description>
<spirit:bitOffset>11</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SPH_USB_WAKEUP</spirit:name>
<spirit:description>status of ic_usb wakeup</spirit:description>
<spirit:bitOffset>10</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>IPC1_S2A_INT_0</spirit:name>
<spirit:description>status of ipc wakeup, no used</spirit:description>
<spirit:bitOffset>9</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AIRQ</spirit:name>
<spirit:description>status of airq wakeup</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>IPC0_S2A_INT_0</spirit:name>
<spirit:description>status of ipc wakeup from ap</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>C_TIMER_1_IRQ</spirit:name>
<spirit:description>status of c timer1 wakeup</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>M1_WUCR_PMIC_WAKEUP_INT</spirit:name>
<spirit:description>status of pmic wakeup</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>M1_WDT_IRQ</spirit:name>
<spirit:description>status of watchdog wakeup</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>M1_CRXD_WAKEUP_INT</spirit:name>
<spirit:description>not used</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>M1_GSSP1_WAKEUP</spirit:name>
<spirit:description>not used</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>M1_I2C_WAKEUP_INT</spirit:name>
<spirit:description>status of i2c wakeup</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>M1_CGPIO_WAKEUP_MASK_OR</spirit:name>
<spirit:description>status of cgpio wakeup, not used</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>SPH_USB_WK</spirit:name>
<spirit:description>ICUSB wakeup source control register </spirit:description>
<spirit:addressOffset>0X00B0</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>SPH_DM_WK_CLR</spirit:name>
<spirit:description>1=clear icusb dm wakeup source</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SPH_DP_WK_CLR</spirit:name>
<spirit:description>1= clear icusb dp wakeup source</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SPH_DM_WK_EN</spirit:name>
<spirit:description>1= enable icusb dm wakeup</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SPH_DP_WK_EN</spirit:name>
<spirit:description>1= enable icusb dp wakeup</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CPSR</spirit:name>
<spirit:description>Marvell &lt;var Processor: Comm&gt; Power Status Register</spirit:description>
<spirit:addressOffset>0X00BC</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_DSPIDL504</spirit:name>
<spirit:description>reflects the state of the marvell msa core (not marvell msa subsystem). the availability of the marvell msa subsystem memories and peripheral bus to the marvell &lt;var processor: comm&gt; core is still governed by means of mpcrx[dspsd], and is not reflected by this bit.  0 = marvell msa core is currently not in idle state  1 = marvell msa core is currently in idle state</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DSPAVL506</spirit:name>
<spirit:description>marvell msa subsystem availability indication. this field should be read after mpcrx[dspsd] is deasserted, to verify the clock is resumed  0 = marvell msa subsystem clock is not running  1 = marvell msa subsystem clock is running</spirit:description>
<spirit:bitOffset>28</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_COMM_TOP_D2508</spirit:name>
<spirit:description>reflects the power state of comm_top   1 = comm_top is in d2 mode. in this mode, msa/seagull are powered off</spirit:description>
<spirit:bitOffset>24</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SG_WFI_FLAG</spirit:name>
<spirit:description> seagull wfi flag. it reflects the wfi flag that is directly output from seagull. when seagull enters wfi, this field will be set.</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_SG_IDLE511</spirit:name>
<spirit:description>1 = &lt;var processor: comm&gt; is idle   0 = &lt;var processor: comm&gt; is active</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_COMM_TOP_STATE512</spirit:name>
<spirit:description>comm_top low power state   0x8=comm_top is in d0 state    0xb=comm_top is in d2 state</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CPRR</spirit:name>
<spirit:description>Marvell &lt;var Processor: Comm&gt; Programmable Reset Register</spirit:description>
<spirit:addressOffset>0X00C0</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_SLAVE_R521</spirit:name>
<spirit:description>slave_reset_out pin sw reset control  1 = slave_reset_out is low.  0 = slave_reset_out may be high base on reset_in and wdt reset.</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DSRAMINT522</spirit:name>
<spirit:description>this signal hold the msa from start execution after released from reset. it will be used to hold msa from start execution till his boot address in sram will be initial with valid code.  1 = execution is hold  0 = msa is running</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WDTR523</spirit:name>
<spirit:description>negate hardware reset to the wdt after system reset. this field is reset due to a wdt reset event  reading 0 = wdt reset is still asserted from the last system reset  reading 1 = wdt reset is negated  writing 0 = operation is ignored  writing 1 = negates the wdt reset  the actual release of the wdt reset signal might be delayed by up to 11/2 cycles of the 32.768 khz clock</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_BBR524</spirit:name>
<spirit:description>apply global hardware reset to the baseband logic  0 = hardware reset is negated  1 = hardware reset is asserted  the baseband logic reset is effected also from dprr register.</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DSPR525</spirit:name>
<spirit:description>apply global hardware reset to the whole marvell msa subsystem.  0 = hardware reset is negated - msa subsystem is released from reset.  1 = hardware reset is asserted - msa subsystem is hold in reset</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_APR526</spirit:name>
<spirit:description>apply hardware reset to the application processor .  0 = hardware reset is negated - core is released from reset.  1 = hardware reset is asserted - core is hold in reset.  the initial value of this bit is determined by cp_wf_fuse not  cp_wf_fuse = 1 (&lt;var processor: comm&gt; core is the first one to boot).  cp_wf_fose not is 0 when &lt;var processor: comm&gt; wakeup first</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CPR527</spirit:name>
<spirit:description>this is read only bit, depending on cp_wf_fuse   0 = &lt;var processor: comm&gt; core was the first core to boot  1 = &lt;var processor: comm&gt; core was the second core to boot.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CPCR</spirit:name>
<spirit:description>Marvell &lt;var Processor: Comm&gt; Power Control Register</spirit:description>
<spirit:addressOffset>0X00C4</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_AXISDD535</spirit:name>
<spirit:description>allow axi bus and agents to be shut down after marvell &lt;var processor: comm&gt; cores enters idle state.  0  axi shutdown not allowed  1 = axi shutdown allowed</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DSPSD536</spirit:name>
<spirit:description>not used</spirit:description>
<spirit:bitOffset>30</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_SLPEN537</spirit:name>
<spirit:description>allow  to switch the system to sleep mode once it reached system idle mode.  0  sleep mode not allowed  1 = sleep mode allowed</spirit:description>
<spirit:bitOffset>29</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DTCMSD538</spirit:name>
<spirit:description>allow dtcm access path from main axi to be shut down when marvell &lt;var processor: comm&gt; core enters idle state.  0  dtcm path shutdown not allowed  1 = dtcm shutdown allowed</spirit:description>
<spirit:bitOffset>28</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DDRCORSD539</spirit:name>
<spirit:description>allow marvell &lt;var processor: comm&gt;/mohawk core and tc ddr clocks shutdown. the clocks are halted when cpcr[ddrcorsd], apcr[ddrcorsd] &amp; dpcr[ddrcorsd] are set and marvell mohawk core is in idle mode   0  marvell &lt;var processor: comm&gt; core and tc ddr clocks shutdown not allowed  1 = marvell &lt;var processor: comm&gt;/mohawk core and tc ddr clocks shutdown allowed</spirit:description>
<spirit:bitOffset>27</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_APBSD540</spirit:name>
<spirit:description>allow  to shut down apb clock to all of its recipients, overriding other per-module fields. the apb clock is actually shut down once the marvell &lt;var processor: comm&gt; &amp; mohawk cores are idle and cpcr[apbsd], apcr[apbsd] &amp; dpcr[apbsd] are set  0 = apb clock shutdown not allowed  1 = apb clock shutdown allowed</spirit:description>
<spirit:bitOffset>26</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_BBSD541</spirit:name>
<spirit:description>allow  to shut down all clocks provided to the baseband logic, except 32.768 khz clock. the baseband logic clocks are halted as soon as cpcr[bbsd], apcr[bbsd] &amp; dpcr[bbsd] are set and pm_bb_clkres port is negated.  0 = bb clocks shutdown not allowed  1 = bb clocks shutdown allowed</spirit:description>
<spirit:bitOffset>25</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_INTCLR542</spirit:name>
<spirit:description>interrupt clear register.   a write of 1 followed by a write of 0 to this field clears the pm_moh_wakeup_int output of .  the read value is the last value written to this field.</spirit:description>
<spirit:bitOffset>24</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_SLPWP0543</spirit:name>
<spirit:description>sleep mode wake-up decoder port 0 disable  0 = wake-up port 0 is enabled  1 = wake-up port 0 is disabled</spirit:description>
<spirit:bitOffset>23</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_SLPWP1544</spirit:name>
<spirit:description>sleep mode wake-up decoder port 1 disable  0 = wake-up port 1 is enabled  1 = wake-up port 1 is disabled</spirit:description>
<spirit:bitOffset>22</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_SLPWP2545</spirit:name>
<spirit:description>sleep mode wake-up decoder port 2 disable  0 = wake-up port 2 is enabled  1 = wake-up port 2 is disabled</spirit:description>
<spirit:bitOffset>21</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_SLPWP3546</spirit:name>
<spirit:description>sleep mode wake-up decoder port 3 disable  0 = wake-up port 3 is enabled  1 = wake-up port 3 is disabled</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_VCTCXOSD547</spirit:name>
<spirit:description>allow vctcxo shutdown when system is in sleep mode. vctcxo is shutdown when cpcr[vctcxosd], apcr[vctcxosd] &amp; dpcr[vctcxosd] are set &amp; the system enters sleep mode  0 = vctcxo shutdown not allowed  1 = vctcxo shutdown allowed</spirit:description>
<spirit:bitOffset>19</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_SLPWP4548</spirit:name>
<spirit:description>sleep mode wake-up decoder port 4 disable  0 = wake-up port 4 is enabled  1 = wake-up port 4 is disabled</spirit:description>
<spirit:bitOffset>18</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_SLPWP5549</spirit:name>
<spirit:description>sleep mode wake-up decoder port 5 disable  0 = wake-up port 5 is enabled  1 = wake-up port 5 is disabled</spirit:description>
<spirit:bitOffset>17</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_SLPWP6550</spirit:name>
<spirit:description>sleep mode wake-up decoder port 6 disable  0 = wake-up port 6 is enabled  1 = wake-up port 6 is disabled</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_SLPWP7551</spirit:name>
<spirit:description>sleep mode wake-up decoder port 7 disable  0 = wake-up port 7 is enabled  1 = wake-up port 7 is disabled</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_MSASLPEN552</spirit:name>
<spirit:description>allow msa to switch msa subsystem to sleep mode once it reached msa sub system idle mode.the sleep mode is allowed when cpcr[msaslpen], apcr[msaslpen] &amp; dpcr[msaslpen]  0 = msa sleep mode not allowed  1 = msa sleep mode allowed  base on the c setting, msa subsystem may be powered down.</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_STBYEN553</spirit:name>
<spirit:description>allow apps subsystem to shutdown and go into udr-mode when ap subsystem is in sleep mode.  udr is enabled when cpcr[stbyen], apcr[stbyen] are both set &amp; ap subsystem enters ap sleep.</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_VOTE_AP_SLPEN</spirit:name>
<spirit:description>cp vote apmu sleep enable</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CCGR</spirit:name>
<spirit:description>Marvell &lt;var Processor: Comm&gt; Clock Gating Register</spirit:description>
<spirit:addressOffset>0X00C8</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_WDT_13M565</spirit:name>
<spirit:description>enable the functional 13 mhz clock output of the main  to the watchdogtimer.  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>19</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CLK_1248M567</spirit:name>
<spirit:description>enable the functional 1248 mhz clock output.   0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CLK_624M568</spirit:name>
<spirit:description>enable the functional 624 mhz clock output.   0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CLK_832M569</spirit:name>
<spirit:description>enable the functional 832 mhz clock output.  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CLK_312M570</spirit:name>
<spirit:description>enable the functional 312 mhz clock output.  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CLK_104M571</spirit:name>
<spirit:description>enable the functional 104 mhz clock output.  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CLK_52M572</spirit:name>
<spirit:description>enable the functional 52 mhz clock output for ap pmu and ap perihrals.  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>11</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CLK_48M573</spirit:name>
<spirit:description>enable the functional 48 mhz clock output.  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>10</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_GPC574</spirit:name>
<spirit:description>enable the m/n clock generator of the vcxo clockconfigured through gpcr, the clcok is output to vcxo_out pad func3  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>9</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_AP_FUART575</spirit:name>
<spirit:description>enable the functional fast uart clock output (58.5 mhz) of the main  to the application processor apb portion.  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CLK_52M576</spirit:name>
<spirit:description>enable the functional 52 mhz clock output for apb peripherals  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_AP_TWSI577</spirit:name>
<spirit:description>enable the 32m clock of the functional twsi clock output of the main  to the application processor apb portion.  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CLK_208M578</spirit:name>
<spirit:description>enable the functional 208 mhz clock output.  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CLK_26M579</spirit:name>
<spirit:description>enable the functional 26 mhz clock output.  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CLK_13M580</spirit:name>
<spirit:description>enable the functional 13 mhz clock output.  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CLK_6.5M581</spirit:name>
<spirit:description>enable the functional 6.5 mhz clock output.  0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_AP_SUART582</spirit:name>
<spirit:description>enable the functional m/n slow uart clock output (configured through succr) of the main  to the application processor apb portion. it's just uart slow clock(14.17m) source enable   0 = clock not enabled  1 = clock enabled.</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_CLK_416M583</spirit:name>
<spirit:description>enable the functional 416 mhz clock output.   0 = clock not enabled  1 = clock enabled</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CWUCRM</spirit:name>
<spirit:description>Wakeup and Clock Resume Lines Mask Register</spirit:description>
<spirit:addressOffset>0X00CC</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_AUDIO_WAKEUP590</spirit:name>
<spirit:description>mask audio_wakeup</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_AP_GT_WAKEUP591</spirit:name>
<spirit:description>mask ap generic timer wakeup</spirit:description>
<spirit:bitOffset>30</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_GSM_WAKEUPWMX592</spirit:name>
<spirit:description>mask gsm wakeup from pm_clkres</spirit:description>
<spirit:bitOffset>29</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_FB_WAKEUPX593</spirit:name>
<spirit:description>mask fb wakeup from pm_clkres</spirit:description>
<spirit:bitOffset>28</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_GSM_WAKEUPWM594</spirit:name>
<spirit:description>mask gsm wakeup from msa_wake</spirit:description>
<spirit:bitOffset>27</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_FB_WAKEUPWM595</spirit:name>
<spirit:description>mask fb wakeup rom msa_wake</spirit:description>
<spirit:bitOffset>26</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP_ASYNC_INT596</spirit:name>
<spirit:description>mask ap async int from pm_clkres</spirit:description>
<spirit:bitOffset>25</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP_FULL_IDLE597</spirit:name>
<spirit:description>mask ap full idle from pm_clkres</spirit:description>
<spirit:bitOffset>24</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SDH1_AUDIO598</spirit:name>
<spirit:description>mask sdh1/audio wakeup</spirit:description>
<spirit:bitOffset>23</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SDH2599</spirit:name>
<spirit:description>mask sdh2 wakeup</spirit:description>
<spirit:bitOffset>22</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>KEYPRESS600</spirit:name>
<spirit:description>mask keypress wakeup</spirit:description>
<spirit:bitOffset>21</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TRACKBALL601</spirit:name>
<spirit:description>mask trackball wakeup</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>NEWROTARY602</spirit:name>
<spirit:description>mask newrotary wakeup</spirit:description>
<spirit:bitOffset>19</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WDT603</spirit:name>
<spirit:description>mask wdt wakeup</spirit:description>
<spirit:bitOffset>18</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RTC_ALARM604</spirit:name>
<spirit:description>mask rtc alarm wakeup</spirit:description>
<spirit:bitOffset>17</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_TIMER_3605</spirit:name>
<spirit:description>mask cp timer int3 wakeup</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_TIMER_2606</spirit:name>
<spirit:description>mask cp timer int2 wakeup</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_TIMER_1607</spirit:name>
<spirit:description>mask cp timer int1 wakeup</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP1_TIMER_3608</spirit:name>
<spirit:description>mask ap timer1 int3 wakeup</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP1_TIMER_2609</spirit:name>
<spirit:description>mask ap timer1 int2 wakeup</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP1_TIMER_1610</spirit:name>
<spirit:description>mask ap timer1 int1 wakeup</spirit:description>
<spirit:bitOffset>11</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP0_2_TIMER_3611</spirit:name>
<spirit:description>mask ap timer0 and ap timer2 int3 wakeup</spirit:description>
<spirit:bitOffset>10</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP0_2_TIMER_2612</spirit:name>
<spirit:description>mask ap timer0 and ap timer2 int2 wakeup</spirit:description>
<spirit:bitOffset>9</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP0_2_TIMER_1613</spirit:name>
<spirit:description>mask ap timer0 and ap timer2 int1 wakeup</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP7614</spirit:name>
<spirit:description>mask wakeup7 input to pm_clkres</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP6615</spirit:name>
<spirit:description>mask wakeup6 input to pm_clkres</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP5616</spirit:name>
<spirit:description>mask wakeup5 input to pm_clkres</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP4617</spirit:name>
<spirit:description>mask wakeup4 input to pm_clkres</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP3618</spirit:name>
<spirit:description>mask wakeup3 input to pm_clkres</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP2619</spirit:name>
<spirit:description>mask wakeup2 input to pm_clkres</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP1620</spirit:name>
<spirit:description>mask wakeup1input to pm_clkres</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP0621</spirit:name>
<spirit:description>mask wakeup0 input to pm_clkres</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CWUCRS</spirit:name>
<spirit:description>Wakeup and Clock Resume Lines Status Register</spirit:description>
<spirit:addressOffset>0X00D0</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_BB_DROWSY_EN628</spirit:name>
<spirit:description>bb_drowsy_en</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_BB_VCTCXO_REQ629</spirit:name>
<spirit:description>bb_vctcxo_req</spirit:description>
<spirit:bitOffset>30</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_MSA_WAKE_PM_BB_CLKRES630</spirit:name>
<spirit:description>msa_wake/pm_bb_clkres</spirit:description>
<spirit:bitOffset>29</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_PM_CLKRES631</spirit:name>
<spirit:description>pm_clkres</spirit:description>
<spirit:bitOffset>28</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_GSM_WAKEUP632</spirit:name>
<spirit:description>gsm wakeup</spirit:description>
<spirit:bitOffset>27</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_FB_WAKEUP633</spirit:name>
<spirit:description>fb wakeup</spirit:description>
<spirit:bitOffset>26</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP_ASYNC_INT634</spirit:name>
<spirit:description>ap async int</spirit:description>
<spirit:bitOffset>25</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP_FULL_IDLE635</spirit:name>
<spirit:description>ap full idle</spirit:description>
<spirit:bitOffset>24</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SDH1_AUDIO636</spirit:name>
<spirit:description>sdh1/audio wakeup</spirit:description>
<spirit:bitOffset>23</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SDH2637</spirit:name>
<spirit:description>sdh2 wakeup</spirit:description>
<spirit:bitOffset>22</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>KEYPRESS638</spirit:name>
<spirit:description>keypress</spirit:description>
<spirit:bitOffset>21</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TRACKBALL639</spirit:name>
<spirit:description>trackball</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>NEWROTARY640</spirit:name>
<spirit:description>newrotary</spirit:description>
<spirit:bitOffset>19</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WDT641</spirit:name>
<spirit:description>wdt</spirit:description>
<spirit:bitOffset>18</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RTC_ALARM642</spirit:name>
<spirit:description>rtc alarm</spirit:description>
<spirit:bitOffset>17</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_TIMER_3643</spirit:name>
<spirit:description>cp timer 3</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_TIMER_2644</spirit:name>
<spirit:description>cp timer 2</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_TIMER_1645</spirit:name>
<spirit:description>cp timer 1</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP1_TIMER_3646</spirit:name>
<spirit:description>ap1 timer 3</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP1_TIMER_2647</spirit:name>
<spirit:description>ap1 timer 2</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP1_TIMER_1648</spirit:name>
<spirit:description>ap1 timer 1</spirit:description>
<spirit:bitOffset>11</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP0_2_TIMER_3649</spirit:name>
<spirit:description>ap0 timer 3 and ap2 timer 3</spirit:description>
<spirit:bitOffset>10</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP0_2_TIMER_2650</spirit:name>
<spirit:description>ap0 timer 2 and ap2 timer 2</spirit:description>
<spirit:bitOffset>9</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>AP0_2_TIMER_1651</spirit:name>
<spirit:description>ap0 timer 1 and ap2 timer 1</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP7652</spirit:name>
<spirit:description>wakeup7 line in status</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP6653</spirit:name>
<spirit:description>wakeup6 line in status</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP5654</spirit:name>
<spirit:description>wakeup5 line in status</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP4655</spirit:name>
<spirit:description>wakeup4 line in status</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP3656</spirit:name>
<spirit:description>wakeup3 line in status</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP2657</spirit:name>
<spirit:description>wakeup2 line in status</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP1658</spirit:name>
<spirit:description>wakeup1 line in status</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WAKEUP0659</spirit:name>
<spirit:description>wakeup0 line in status</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CRSR</spirit:name>
<spirit:description>Marvell &lt;var Processor: Comm&gt;/Mohawk Reset Status Register</spirit:description>
<spirit:addressOffset>0X00D4</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_SWR668</spirit:name>
<spirit:description>software controlled, reset events tracking field. this field may be written (and read) to any value between 0x0 and 0xf.   this field's content does not affect  functionality in any way</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>WDTR670</spirit:name>
<spirit:description>indicates whether the last system reset was caused by a watchdog timer reset event  0 = last system reset was not caused by watchdog timer reset  1 = last system reset was caused by watchdog timer reset  depending on the type of reset the device has experienced, one of the reset values in [2:0] is 1 and the others are 0.</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_EMR671</spirit:name>
<spirit:description>indicates whether the last system reset was caused by an external master reset event  0 = last system reset was not caused by external master reset  1 = last system reset was caused by external master reset  depending on the type of reset the device has experienced, one of the reset values in [2:0] is 1 and the others are 0.</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_POR672</spirit:name>
<spirit:description>indicates whether the last system reset was caused by a power on reset  event  0 = last system reset was not caused by power on reset  1 = last system reset was caused by power on reset  depending on the type of reset the device has experienced, one of the reset values in [2:0] is 1 and the others are 0.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CUCCR</spirit:name>
<spirit:description>CP UART Clock and  reset Control Register</spirit:description>
<spirit:addressOffset>0X00DC</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_RESERVED679</spirit:name>
<spirit:description>reserved</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>26</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_UART_RESET_EN</spirit:name>
<spirit:description>0x1 =  reset asserted</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_UART_APB_EN</spirit:name>
<spirit:description>0x1 = clock enable</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_UART_FCLK_EN</spirit:name>
<spirit:description>0x1 =  clock enable</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_UART_CLK_SEL</spirit:name>
<spirit:description>uart clock selection: 0x0 = fast 48mhz clock (312m div 5p3), 0x1 = slow m/n divider clock (generated by the main pmu 156m m/n divider  in succr register). other selection reserved</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DMA_INT_MSK</spirit:name>
<spirit:description>DMA Interrupt Mask Register</spirit:description>
<spirit:addressOffset>0XE0</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>DMA_INT_MSK</spirit:name>
<spirit:description>cp dma interrupt mask  this field contains one bit for each dma channel interrupt mask.  1 = interrupt is masked</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>32</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DMA_INT_STATUS</spirit:name>
<spirit:description>DMA Interrupt Status Register</spirit:description>
<spirit:addressOffset>0XE4</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_DMA_INT_STATUS</spirit:name>
<spirit:description>cp dma interrupt status   this field contains one bit for each dma channel interrupt that is pending (after masking).    0x1= interrupt is pending</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>32</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DMA_XTC_CTRL</spirit:name>
<spirit:description>DMA WTC RTC Control Register</spirit:description>
<spirit:addressOffset>0XE8</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_DMA_WTCB</spirit:name>
<spirit:description>cp_dma_wtcb</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_DMA_RTCB</spirit:name>
<spirit:description>cp_dma_rtcb</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_DMA_WTC</spirit:name>
<spirit:description>cp_dma_wtc</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_DMA_RTC</spirit:name>
<spirit:description>cp_dma_rtc</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DYN_CLK_GATE_CTRL</spirit:name>
<spirit:description>Dynamic Clock Gating Control</spirit:description>
<spirit:addressOffset>0XF0</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>DTC_DYN_CG_EN</spirit:name>
<spirit:description>dynamic clock gating control enable for dtc.when enabled, when dtc is inatcive, dtc clkgen will be disabled to save more power    0x0=disabled    0x1=enabled</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CR5FAB_DYN_CG_EN</spirit:name>
<spirit:description>cr5 2x1 fabric dynamic clock gating control enable. when enable, cr5 2x1 fabric axi clock will be gated dynamically to save more power    0x0=disabled    0x1=enabled</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FBFAB_DYN_CG_EN</spirit:name>
<spirit:description>fb 2x1 fabric dynamic clock gating control enable. when enable, fb 2x1 fabric axi clock will be gated dynamically to save more power    0x0=disabled    0x1=enabled</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>GBDEC_DYN_CG_EN</spirit:name>
<spirit:description>gb decoder dynamic clock gating control enable. when enable, gb decoder axi clock will be gated dynamically to save more power    0x0=disabled    0x1=enabled</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>GBPRT_DYN_CG_EN</spirit:name>
<spirit:description>cpss fabric gb port dynamic clock gating control enable. when enabled, gb port axi clock on cpss fabric will be gated dynamically to save more power    0x0=disabled    0x1=enabled</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CR5PRT_DYN_CG_EN</spirit:name>
<spirit:description>cpss fabric cr5 port dynamic clock gating control enable. when enabled, cr5 port axi clock on cpss fabric will be gated dynamically to save more power    0x0=disabled    0x1=enabled</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CPFAB_DYN_CG_EN</spirit:name>
<spirit:description>cpss fabric dynamic clock gating control enable. when enabled, cpss fabric axi clock will be gated dynamically to save more power    0x0=disabled    0x1=enabled</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>FABRIC_QoS_CTRL</spirit:name>
<spirit:description>Fabric QoS  Control</spirit:description>
<spirit:addressOffset>0XF4</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>DTC_MST_AR_QOS</spirit:name>
<spirit:description>cr5 2x1 fabric dtc master read channel qos value</spirit:description>
<spirit:bitOffset>28</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DTC_MST_AW_QOS</spirit:name>
<spirit:description>cr5 2x1 fabric dtc master write channel qos value</spirit:description>
<spirit:bitOffset>24</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CR5_MST_AR_QOS</spirit:name>
<spirit:description>cr5 2x1 fabric cr5 master read channel qos value</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CR5_MST_AW_QOS</spirit:name>
<spirit:description>cr5 2x1 fabric cr5 master write channel qos value</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>GB_MST_AR_QOS</spirit:name>
<spirit:description>fb 2x1 fabric gb master read channel qos value</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>GB_MST_AW_QOS</spirit:name>
<spirit:description>fb 2x1 fabric gb master write channel qos value</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FB_MST_AR_QOS</spirit:name>
<spirit:description>fb 2x1 fabric fb master read channel qos value</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FB_MST_AW_QOS</spirit:name>
<spirit:description>fb 2x1 fabric fb master write channel qos value</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>4</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DDR_REQ_CTRL_GB</spirit:name>
<spirit:description>DDR Request Control Register for GB</spirit:description>
<spirit:addressOffset>0X0100</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_745</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>28</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DDRC_RDY_EN746</spirit:name>
<spirit:description>  1 = 1= axi transactions to ddrc are sent without considering ddrc's status   0 =  0= axi transactions to ddrc are only sent when ddrc is ready</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_747</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>21</spirit:bitOffset>
<spirit:bitWidth>10</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FBDMA_DDRC_REQ_EN748</spirit:name>
<spirit:description>  0x1= if fb dma is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because fb dma's is active</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DTC_DDRC_REQ_EN749</spirit:name>
<spirit:description>  0x1= if dtc is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because dtc's is active</spirit:description>
<spirit:bitOffset>19</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CPDMA_DDRC_REQ_EN750</spirit:name>
<spirit:description>  0x1= if cp dma is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because cp dma is actvie</spirit:description>
<spirit:bitOffset>18</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MSA_DDRC_REQ_EN751</spirit:name>
<spirit:description>  0x1= if msa is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because msa is active</spirit:description>
<spirit:bitOffset>17</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SG_DDRC_REQ_EN752</spirit:name>
<spirit:description>  0x1= if &lt;var processor: comm&gt; is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because &lt;var processor: comm&gt; is active</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>GSM_DDRC_REQ_EN753</spirit:name>
<spirit:description>  0x1= if gsm is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because gsm is active</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_754</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FB_MODEM_DDRC_REQ_EN755</spirit:name>
<spirit:description>  0x1= if modem is active, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because modem is active</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>PWR_MODE_DDRC_REQ_EN756</spirit:name>
<spirit:description>  0x1= if pwr_mode is 2'b00, request ddrc resource&lt;p&gt;0x0 = ddrc resource will not be requested because pwr_mode is 2'b00</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_757</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DTCMSD758</spirit:name>
<spirit:description>ddr is ready for cp access   1 = ddr is ready &lt;0&gt;ddr is not ready</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_759</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>AXISD_HW_GB</spirit:name>
<spirit:description>AXISD HW Control Register</spirit:description>
<spirit:addressOffset>0X104</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_766</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>24</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SG_AXISD_CTRL767</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if &lt;var processor: comm&gt; is active, do not allow axi shut down&lt;p&gt;0x0 = do not care &lt;var processor: comm&gt;'s status</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MSA_AXISD_CTRL768</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if msa is active, do not allow axi shut down&lt;p&gt;0x0 = do not care msa's status</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_DMAC_AXISD_CTRL769</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if cp dmac is active, do not allow axi shut down&lt;p&gt;0x0 = do not care cp dmac's status</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DTC_AXISD_CTRL770</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if dtc is active, do not allow axi shut down&lt;p&gt;0x0 = do not care dtc's status</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>PWR_MODE_AXISD_CTRL771</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if pwr_mode is 2'b00, do not allow axi shut down&lt;p&gt;0x0 = do not care pwr_mode</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FB_DMAC_AXISD_CTRL772</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if fb dmac is active, do not allow axi shut down&lt;p&gt;0x0 = do not care fb dmac's status</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FB_AXISD_CTRL773</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if fb modem is active, do not allow axi shut down&lt;p&gt;0x0 = do not care fb modem's status</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>GSM_AXISD_CTRL774</spirit:name>
<spirit:description>hardware voting control for axisd   0x1= if gsm is active, do not allow axi shut down&lt;p&gt;0x0 = do not care gsm's status</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CP_Timer_CTRL</spirit:name>
<spirit:description>CP Timer Control Register</spirit:description>
<spirit:addressOffset>0X00124</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_819</spirit:name>
<spirit:description>reserved</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>30</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_TIMER_RESET_EN</spirit:name>
<spirit:description>1 =  reset</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_TIMER_APB_CLKEN</spirit:name>
<spirit:description>1 =  clock enable</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_TIMER_FUNC_CLKEN</spirit:name>
<spirit:description>1 = clock enable</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_TIMER_FAST_CLK_SEL</spirit:name>
<spirit:description>0 = 13mhz clock; 1 =  32k clock; 2 = 6.5mhz clock, 3 = 3.25mhz clock, 4 = 1mhz clock, 5~7: reserved</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>CP_I2SCCRx</spirit:name>
<spirit:description>CP I2S Clock Generation Control Register</spirit:description>
<spirit:addressOffset>0X0128</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CP_PM_SYSCLK_EN830</spirit:name>
<spirit:description>enables the i2s clock input to sysclkn generator as well as the output of the generator.</spirit:description>
<spirit:bitOffset>31</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_SYSCLK_BASE831</spirit:name>
<spirit:description>selects the i2s m/n divider input clock frequency:  0 = sysclkn generator base clock rate is 26 mhz  1 = sysclkn generator base clock rate is 156 mhz.</spirit:description>
<spirit:bitOffset>30</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_BITCLK_EN832</spirit:name>
<spirit:description>enables the i2s clock input to the bit clock generator.</spirit:description>
<spirit:bitOffset>29</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_BITCLK_DIV_468833</spirit:name>
<spirit:description>determine bitclk1:sysclk1 relation:  0x0 = reserved  0x1 = bitclk1 rate is the sysclk1 rate divide by 4  0x2 = bitclk1 rate is the sysclk1 rate divide by 6  0x3 = bitclk1 rate is the sysclk1 rate divide by 8</spirit:description>
<spirit:bitOffset>27</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_DENOM834</spirit:name>
<spirit:description>i2s clock generation programmable divider denominator value.  the i2s sysclk is generated using a fractional divider. see section 1.5.2.4, i2s clock divider programming, on page 74 for calculating the required values.</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>12</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CP_PM_NOM835</spirit:name>
<spirit:description>i2s clock generation programmable divider numerator value.  the i2s sysclk is generated using a fractional divider. see section 1.5.2.4, i2s clock divider programming, on page 74 for calculating the required values.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>15</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
</spirit:addressBlock>
</spirit:memoryMap>
</spirit:memoryMaps>
</spirit:component>