<?xml version="1.0" encoding="UTF-8"?>
	<spirit:component xmlns:kactus2="http://funbase.cs.tut.fi/" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5 http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5/index.xsd">
		<spirit:vendor>org.example</spirit:vendor>
		<spirit:library>example_lib</spirit:library>
		<spirit:name>dssp</spirit:name>
		<spirit:version>example_version</spirit:version>
<spirit:memoryMaps>
<spirit:memoryMap>
<spirit:name>some_register_map</spirit:name>
<spirit:displayName>RDL Example Registers</spirit:displayName>
<spirit:addressBlock>
<spirit:name>some_register_map</spirit:name>
<spirit:displayName>ASR Module Registers</spirit:displayName>
<spirit:description>This address map contains some example registers to show how RDL can be utilized in various situations.</spirit:description>
<spirit:baseAddress>0xF0205000</spirit:baseAddress>
<spirit:range>0x2000</spirit:range>
<spirit:width>32</spirit:width>
<spirit:usage> </spirit:usage>
<spirit:volatile>true</spirit:volatile>
<spirit:register>
<spirit:name>DSSP_DSSPRR</spirit:name>
<spirit:description>DSSP Reset Register</spirit:description>
<spirit:addressOffset>0X100</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>HW_OP</spirit:name>
<spirit:description>hardware option id: 1434490. this field must be set to 0 for normal operation.</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RSSP</spirit:name>
<spirit:description>dssp reset  signal that resets the dssp serial interface - the dssp section that interface to the pads.   must be set to get the dssp out of reset.  0 = reset the dssp serial machine logic  1 = the dssp serial interface is out of reset</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RSSPA</spirit:name>
<spirit:description>dssp fifo reset  signal that resets the dssp fifo interface - the dssp section that interfaces the gpb and includes the rx/tx fifos.  must be set to get the dssp out of reset.   can be used to reset the dssp fifo logic without changing the state of the signal that interfaces the chip pads. this reset resets the dssp core control registers. it does not reset the three additional registers.  0 = reset the dssp fifo logic and bus interface logic  1 = the dssp fifo and bus interface are out of reset</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DSSP_DSSPTIR</spirit:name>
<spirit:description>DSSP Tx Interface Register</spirit:description>
<spirit:addressOffset>0X104</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>TXFRM_INV</spirit:name>
<spirit:description>tx frame signal polarity  this bit may be modified.   0 = the frame-sync output signal polarity is unchanged.  1 = the frame-sync output signal is inverted before leaving the dssp.  this bit must be accessed only when the dssp is disabled.</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DMATXREQCLR</spirit:name>
<spirit:description>dmatxreqclr  when set to 1, this field disables the dma tx request signal and sets it to its idle state. the idle state remains until this bit is set to 0.  this bit can be accessed at all times.</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TXSWOEC</spirit:name>
<spirit:description>dssp txgpio software oe mux control  sets the source of the tx gpio oe signal.   0 = txgpio oe controlled by software - according to txswoe bit  1 = txgpio oe controlled by dssp  this bit must be accessed only when the dssp is disabled.</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TXSWOE</spirit:name>
<spirit:description>dssp txgpio software oe  software tx gpio oe bit, effective when this field is 0.  0 = txgpio is in tri-state  1 = txgpio is active  this bit must be accessed only when the dssp is disabled.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DSSP_DSSPRIR</spirit:name>
<spirit:description>DSSP Rx Interface Register</spirit:description>
<spirit:addressOffset>0X108</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>DMARXREQCLR</spirit:name>
<spirit:description>dmarxreqclr  when set to 1, this bit disables the dma rx request signal and sets it to its idle state. the idle state remains until this bit is set to 0.  this bit must be accessed at all times.</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SCLKINSEL</spirit:name>
<spirit:description>ssp_clk input clock select (mux a in the dssp data/clock pad connectivity figure in the &lt;var product number&gt; datasheet)  this field selects the source for the functional clock of the dssp serial interface when the dssp is in clock-master mode (uses the mccu-generated dssp clock as the source for the functional clock).  clock source options are:  0x0 = mccu-generated dssp clock  0x1 = return clock from the clock pad (used only for rx-data clock-master mode. in this mode, the dssp uses a delayed version of the mccu-generated dssp functional clock to enable working at high frequency - 26/13 mhz)  0x2 = sclk return clock from the pad of dssp 0 (referred to also as external clock, used to synchronize any dssp to the input clock source of dssp 0) - for clock-slave mode  0x3 = 1/4-cycle clock delay (same effect as the return clock option but with fixed delay) - hardware test option for rx-data clock-master mode (requires &lt;sclkoutsel&gt;=1)  this bit must be accessed only when the dssp is disabled.</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SCLKOUTSEL</spirit:name>
<spirit:description>dssp sclk out clock select (mux b in the dssp data/clock pad connectivity figure in the &lt;var product number&gt; datasheet)  when the dssp is in clock-master mode, this bit selects the sclk output clock source to the external device.  output clock options are:  0 = dssp-generated clock (usually used with &lt;sclkinsel&gt; = 0x0)  1 = mccu-generated dssp clock, while the dssp gets the delayed version of the clock (requires &lt;sclkinsel&gt; = 0x1 or 0x3)  this bit must be accessed only when the dssp is disabled.</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RXCLKSEL</spirit:name>
<spirit:description>dssp rx internal clock select (mux c in the dssp data/clock pad connectivity figure in the &lt;var product number&gt; datasheet).   when the dssp is master on the clock and a full-rate clock is selected, the rx logic clock can be 1/4-cycle lead in respect to the clock driven to the output pad.  0 = regular clock selected for rx (must be set for normal operation)  1 = 1/4-cycle lead clock selected for rx (hardware test option)  this bit must be accessed only when the dssp is disabled.</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RXTXSWOEC</spirit:name>
<spirit:description>dssp rxtx gpio software oe mux control (mux d in the dssp data/clock pad connectivity figure in the &lt;var product number&gt; datasheet)  sets the source of the rxtx gpio output enable (oe) signal.   0x0 = software-controlled - according to rxtxswoe bit  0x1 = dssp-hardware controlled by dssp  0x2 = frm-controlled option 1: the frame signal is used as the output enable when the frame signal is active during the transmit. should be used for read-back mode to invert the pad direction between the tx and rx parts  0x3 = frm-controlled option 2  this bit must be accessed only when the dssp is disabled.</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RXTXSWOE</spirit:name>
<spirit:description>dssp txgpio software oe  software rxtx gpio output enable (oe) bit, effective when this field is 0.  0 = rxtxgpio is in tri-state  1 = rxtxgpio is active  this bit must be accessed only when the dssp is disabled.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DSSP_DSSPCFG</spirit:name>
<spirit:description>DSSP Configuration Registers</spirit:description>
<spirit:addressOffset>0X10C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>RDBACK_32BITS_ENABLE</spirit:name>
<spirit:description>read-back mode bit length (30 or 32)  0 = maximal length of read-back word is 30 bits (legacy logic)  1 = maximal length of read back word is 32 bits</spirit:description>
<spirit:bitOffset>19</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>GPIO_SSPSCLK_PATH_SEL</spirit:name>
<spirit:description>selects the path for the sspsclk clock  0 = directly from the pads  1 = via the sspsclk gater</spirit:description>
<spirit:bitOffset>18</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FRFLT_SMP_LEN</spirit:name>
<spirit:description>defines the full length of the sample, in sclk clock cycles.  this value should be set to the desired length minus 1   range: 1 to 127 (0x1 to 0x7f)  reset value: 0</spirit:description>
<spirit:bitOffset>11</spirit:bitOffset>
<spirit:bitWidth>7</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FRFLT_NO_PASS__LEN_MSB</spirit:name>
<spirit:description>msb of &lt;frflt_no_pass_len&gt; field.</spirit:description>
<spirit:bitOffset>10</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FRFLT_NO_PASS_LEN</spirit:name>
<spirit:description>defines the length of the sequence that is filtered out of the frame, in sclk clock cycles.  this value is a fraction of the &lt;frflt_smp_len&gt; field.   msb is configured in the &lt;frflt_no_pass_len_msb&gt; field.  range: 1 to 127 (0x1 to 0x7f)  reset value: 0</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>6</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FRFLT_CK_POL</spirit:name>
<spirit:description>frame filter clock polarity  0 = frame filter uses the same clock as dssp_0 sclk  1 = frame filter uses polarity inverted from dssp_0 sclk</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FRFLT_FRM_OUT_POL</spirit:name>
<spirit:description>frame filter output frame-sync polarity  0 = frame-sync signal to dssp_0 is active high  1 = frame-sync signal to dssp_0 is active low</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FRFLT_FRM_IN_POL</spirit:name>
<spirit:description>frame filter input frame-sync polarity  0 = frame-sync signal is treated as active high  1 = frame-sync signal is treated as active low</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FSTRP_EN</spirit:name>
<spirit:description>0 = disable frame filter  1 = enable frame filter</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
</spirit:addressBlock>
</spirit:memoryMap>
</spirit:memoryMaps>
</spirit:component>