
...doing...,....keep waiting...

*** python for ZMODP *** Modular Inverse *** start ***
### Given M, X and  r = 2^(2n) mod M. compute Z = X^(-1) mod M ###

S1---input param start--
input data: RSA-256

M=0x
 db73f46380b0e9580ce7f480cd026f9a8dcd610ecb2c806622e741dfec9889a7
X=0x
 9f8fdd1d5fc16d0cbb68a3cd1d17f1b37656bb43a2e3317dceea873e9f8fdd12
(Y is pre-compu M result). Y=0x
 46dbe38a15ebd9ff9d7d4137419a62ea615d2a4246cad9477c5ba34477862a5e

---input param end--


S2......running......
        .............done


S3---output result start--

ResultZ=0x
 3be758cb8a819d80676254df5b9b2d229855af282b6fae7c10db07074fc2dc15

---output result end--

*** python for ZMODP *** Modular Inverse *** end ***
