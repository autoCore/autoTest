*** python for ZMODP *** Montgomery Multiplication *** start ***
### Z = X * Y * 2^(-n) mod M ###

S1---input param start--
input data: RSA-1024

M=0x
 e72ef44b4a54b63fe1f3c9c8f50db509521eac432b9a8cf93de744a4337937e2232077a692cdcc02b83095e4b92f4ae018b130c81d03d8b6db1989e626ba934497586d3e7755abb0117b14956d5fdae86f4ba0095bc0de63a7761bc63fa1ffb8139385639233b2b7f00389944045a80166d9b2348c5090996ce5128d231e5017
X=0x
 f9d68c23f1725c79bcc257293b542c20176ea890a2143cd01c46a33302e1339dfa86ed3ec436fcdcef16a5ccc7de9d9ac451b009b51e35916801ec724100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Y=0x
 7fcab2488a8d6cc11304d8c29f81d90362675121e670a41b408e8b5b47e6dd6bcf21e824d31d2780cc06082d4043d6e3348dd7a4fdfc478a4cf0e0f01040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

---input param end--


S2......running......
        .............done


S3---output result start--

ResultZ=0x
 7cb740ce622454f4498c1c2a193e5224874b33d7aa316d2a552165c3cb32af5400a7985181768543b8cd621feb16d7ce8e6b945a620efafc1d88a736417fcd7873ae6ee3a52d65e9074ecebd9bb41838c38ec4ae49d1498cf86e676ccd75780f1d726a6fc1055e1aa0256199487432cf2474d3d74bf4b33f30a0400000000000

---output result end--

*** python for ZMODP *** Montgomery Multiplication *** end ***
