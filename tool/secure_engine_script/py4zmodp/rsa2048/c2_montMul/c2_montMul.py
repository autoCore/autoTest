# -*- coding: utf-8 -*-
# coding: utf-8
import Crypto

'''
TODO:RSA-2048
N = EA966BD09FFC725BE216507149161B4E8161D11D1C8A8D2033C9B3007327948FD92742277C3CCBCFD064F038E93DAE525A5898BAAF368906D2BA118B2714A907C58F735F694DE33093BE764E331B51AF3F22174367FFF62DAA0E8023DD40520054B117F3C2F96A91F33B29A8216E7E8B60927549C8DA28FE262DA71F07A3EF22EA13CFB5C8EC06F2FC3CA4CAF221EF918436A80E9D00E7135794214B18F97522C90F79C6D372022EBAE51852AF0123D9450C51523EBC27A4877D708ED24DCB50B2D211ECB14E5A8C4C030D1DEE6F7F97A66E7899E2A8EEAEF9B3346B6E1FB3A0C1CFEB48D1E63EDA14196061F37BED77F57470ADC9B52CB1A9A08140B25F3635
E = 010001
D = 964A868A636535D2FE16F3B49071744F287F059D1403040544888D80D545DF5D056FAC6765A601A1834E97C4AE5191143BC3951DCD51301AC9F8E1727838394EBC587A3EFF55221FA61818ED62BAB6EB829411B962B0CF045475F3CC865C45ECE6558B15E5AD2B8494032C5E060527579E2856B24DD6CEFA7C753523A11E7AFE764E8CDC46AD93A737C5CF8AF3588108AD28CE7C8E8CBE10287A3198A0A77624FC90D30FD23D2E86C15DAAA13833A9A217681420EF9D47B51F7A44FD4A97E72B9A3A8394943C235847BCC0B1939F61B65146D3981EBBEFAD23982132A6C71E66DC6129877805595A4C9EDDF3C361209B9F94F8F9CAA4C13520CEBF1BF81E2EC1
P = F9D68C23F1725C79BCC257293B542C20176EA890A2143CD01C46A33302E1339DFA86ED3EC436FCDCEF16A5CCC7DE9D9AC451B009B51E35916801EC72415BF34033072352CA8B18C8EAE88F0C3C1B4D12CD39D321EB9F40A243EC23942202ED04739B81E1C94ACA9E3A58676E0E90C8C3B994E2FC1B545AC9216A51447E362311
Q = F05F9569975EF87E629F14457A39DE880FF7C56A2EBDFB54A2B9E175C4616AA422B4928D2F729F348AF2E0B1556EBD4D7D455AC9CDE5B9A003A3FF8523F9C71E11A74D35AF20D0514A162DDD9391B3FE444531DAF197BD8ABF8996F9167587D41EB21F70C472D6BC289E7D5F5143DE6AFB5B1EDB19EC0C78D079BE7D29A458E5
DP = 5D4A9819F3D6D8613CF2F4C918B65DA3BE1C3C2585E038B51D59E326F13456A9EF1AE30C4508A3737C73E0858F3CB96D49519782887737598C94EB4DDECA0F1331FAC05DF1F3EED557A26F880A09C7C5F58C5A22987167193073C4F5539DF4136D77EC0FFBB249E6BBB2B72C8993D6E3FF307171E262A563E56E65DA45A6C181
DQ = E126F72217EA9A626FE84829A80A4A9A3232C894E4418A08C5FFCCE2EDD6BDF80E960B6BF9D4A8B1A3B14AAC70B4B0D6C38F5232130DAA68EAE013B8D770E08516CE19F13E204360D13FA32898507343A9191350DCD9606E7568E0A462D8262997B30AE62AECD29D1E830E36593D7439CB4597CA6D2680AC2DC2CB9E1B8258CD
QP = 38E6BF6E04F88FD807C7B1DA9EE179452484A387DC680EF46282EF1CC6ABC5382F73DB536B47C4177224D70D645177137CE154AF604F36588E0375B6F81A482AEC83018710CF69BDB1A6BD9FB8CC8E9AE4D335F27F639D5AD0AE775A76D02F0610BCC0F8CE0A7543ABE726536ED439CCD01568657A9FB6EDC41271B74F15C817
'''

### case1-Pre-Computation of R
# RSA-2048
#TODO: rsa's N 
M=0xEA966BD09FFC725BE216507149161B4E8161D11D1C8A8D2033C9B3007327948FD92742277C3CCBCFD064F038E93DAE525A5898BAAF368906D2BA118B2714A907C58F735F694DE33093BE764E331B51AF3F22174367FFF62DAA0E8023DD40520054B117F3C2F96A91F33B29A8216E7E8B60927549C8DA28FE262DA71F07A3EF22EA13CFB5C8EC06F2FC3CA4CAF221EF918436A80E9D00E7135794214B18F97522C90F79C6D372022EBAE51852AF0123D9450C51523EBC27A4877D708ED24DCB50B2D211ECB14E5A8C4C030D1DEE6F7F97A66E7899E2A8EEAEF9B3346B6E1FB3A0C1CFEB48D1E63EDA14196061F37BED77F57470ADC9B52CB1A9A08140B25F3635

### TODO: X is random?
X=0x

### TODO: Y is random?
Y=0x3a9c744f8c201ab1b4d05c980315da24d2c5985ba92a907249b8293798f24998f5e9a7c9cfe2cf38fd5c324afdb505038eff367e2710d1942374df5bc8adf38644f7cbbb255c06532c1e6141dfc1fb441941cca2b724611fb226b7c9bc677a09ff1523174226fbdc67db8bca1300997e8dcda7304077a02d4caa74a90e2c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

ResultZ=(((X*Y)/pow(2,2048))%M)

''' 
output
'''

print ("*** python for ZMODP *** Montgomery Multiplication *** start ***")
print ("### Z = X * Y * 2^(-n) mod M ###")
print ("")
print ("S1---input param start--")
print ("input data: RSA-2048")
print ("")

#S1: input param
print ("M=0x")
print (" %x" %M)
print ("X=0x")
print (" %x" %X)
print ("Y=0x")
print (" %x" %Y)

print ("")
print ("---input param end--")
print ("")
print ("")
print ("S2......running......")
print ("        .............done")
print ("")
print ("")
print ("S3---output result start--")
print ("")

#S3: result 
print ("ResultZ=0x")
print (" %x" %ResultZ)

print ("")
print ("---output result end--")
print ("")
print ("*** python for ZMODP *** Montgomery Multiplication *** end ***")



