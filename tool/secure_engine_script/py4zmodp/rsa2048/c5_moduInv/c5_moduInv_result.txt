
...doing...,....keep waiting...

*** python for ZMODP *** Modular Inverse *** start ***
### Given M, X and  r = 2^(2n) mod M. compute Z = X^(-1) mod M ###

S1---input param start--
input data: RSA-2048

M=0x
 dcf465a7c6e637e2c6e8a01e03a76d44baba7b8ecec1e563a3cd4442c449bb724af1e3ddba4af2ba8cc0620500234cb12defc345db5cf368a7e62d4a2e432e3f962f219997f63f7950b21ec2442a7560221dc9a4ba0844668ba684330c6f86cec5db3061164a40ae9ac308fab0cb4a0bd5e3062b16db2a1dd9037abc11af381dace7c003694a718c2b4dbb6b7ff0044f5de8e22526c52a49cfc1d872281a2047aed11fec9a79cb68fbd44bf97cd27a4285d2198b22d23378e5e543047aaf7c8b61a90906d30ec25bfb01478b1b7228956ae42000cff98dc8fe353f3c206930f4ce758f974e239e06a3e589cc15772d5c17e65e8c9059d8999f96ac19f1d6523d
X=0x
 ea966bd09ffc725be216507149161b4e8161d11d1c8a8d2033c9b3007327948fd92742277c3ccbcfd064f038e93dae525a5898baaf368906d2ba118b2714a907c58f735f694de33093be764e331b51af3f22174367fff62daa0e8023dd40520054b117f3c2f96a91f33b29a8216e7e8b60927549c8da28fe262da71f07a3ef22ea13cfb5c8ec06f2fc3ca4caf221ef918436a80e9d00e7135794214b18f97522c90f79c6d372022ebae51852af0123d9450c51523ebc27a4877d708ed24dcb50b2d211ecb14e5a8c4c030d1dee6f70d
(Y is pre-compu M result). Y=0x
 153f0f3a99595a9a404e8fb0a20d206f5cbc623ae769823aa0756a56700d950fd2b61c78d5527450ff17c55d7219ed34d06c95ab62315f07292d4bee48ff7959506b6275fe2fd4a87030552ab805b4e141c041f2669ede0a55a5593de246422d62c6b8486bb68b56f64d6db7039eaf2cbaa9fd5759a7cc56e00c7e2a3d6583e30406bf6bbc29677a7b7834b7482e713ef04e0cb24ad49424ea70ee2b59fd95830c9509d568b6586f99074517f656a3efd27276e42f32d78adaf98de2cd847c7c0c3289421967d60cc8ff02123195736b734faee111e6b7ed71939f0a95fce6abe347f61a5a6ab9666dc4d14b9030bed94617b158afe02edf7ac0af463bf57a98

---input param end--


S2......running......
        .............done


S3---output result start--

ResultZ=0x
 1bc73f9bdb233179b65e6a1e5053541235fbe280e4dd96a944f76c830f28a74febe509ff771d39ab811565988439624366f8fb071f170881610ce81cf23378db965641dbeb1c26602f09908112183bfee5184cc2b4326a0db3d78e0ec5099d9781520f009a292068fe1e3a59734ed6e90f4d9b3c3e784eb3c76fd83dde7eaf55110aca58e01dba01b262db0484b8eb87c8ee7922a7028144d414cd3337dcfc9f2d2f864d1aa2b4776d183138dbabb3781b84fbb57bedbab7862a9ad0efefd6c006b4e22a4bc187a9037dbb4a92ae2685178ddbafbe31678ea749496f68fd91f4217004f14ef6f18928236c6cb90873b52b4d9828e1511a36b6f8181f467db57c

---output result end--

*** python for ZMODP *** Modular Inverse *** end ***
