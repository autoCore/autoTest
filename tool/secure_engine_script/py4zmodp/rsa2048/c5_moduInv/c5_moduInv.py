# -*- coding: utf-8 -*-
# coding: utf-8
import Crypto

def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('modular inverse does not exist')
    else:
        return x % m
		
		
'''
TODO:RSA-2048
N = EA966BD09FFC725BE216507149161B4E8161D11D1C8A8D2033C9B3007327948FD92742277C3CCBCFD064F038E93DAE525A5898BAAF368906D2BA118B2714A907C58F735F694DE33093BE764E331B51AF3F22174367FFF62DAA0E8023DD40520054B117F3C2F96A91F33B29A8216E7E8B60927549C8DA28FE262DA71F07A3EF22EA13CFB5C8EC06F2FC3CA4CAF221EF918436A80E9D00E7135794214B18F97522C90F79C6D372022EBAE51852AF0123D9450C51523EBC27A4877D708ED24DCB50B2D211ECB14E5A8C4C030D1DEE6F7F97A66E7899E2A8EEAEF9B3346B6E1FB3A0C1CFEB48D1E63EDA14196061F37BED77F57470ADC9B52CB1A9A08140B25F3635
E = 010001
D = 964A868A636535D2FE16F3B49071744F287F059D1403040544888D80D545DF5D056FAC6765A601A1834E97C4AE5191143BC3951DCD51301AC9F8E1727838394EBC587A3EFF55221FA61818ED62BAB6EB829411B962B0CF045475F3CC865C45ECE6558B15E5AD2B8494032C5E060527579E2856B24DD6CEFA7C753523A11E7AFE764E8CDC46AD93A737C5CF8AF3588108AD28CE7C8E8CBE10287A3198A0A77624FC90D30FD23D2E86C15DAAA13833A9A217681420EF9D47B51F7A44FD4A97E72B9A3A8394943C235847BCC0B1939F61B65146D3981EBBEFAD23982132A6C71E66DC6129877805595A4C9EDDF3C361209B9F94F8F9CAA4C13520CEBF1BF81E2EC1
P = F9D68C23F1725C79BCC257293B542C20176EA890A2143CD01C46A33302E1339DFA86ED3EC436FCDCEF16A5CCC7DE9D9AC451B009B51E35916801EC72415BF34033072352CA8B18C8EAE88F0C3C1B4D12CD39D321EB9F40A243EC23942202ED04739B81E1C94ACA9E3A58676E0E90C8C3B994E2FC1B545AC9216A51447E362311
Q = F05F9569975EF87E629F14457A39DE880FF7C56A2EBDFB54A2B9E175C4616AA422B4928D2F729F348AF2E0B1556EBD4D7D455AC9CDE5B9A003A3FF8523F9C71E11A74D35AF20D0514A162DDD9391B3FE444531DAF197BD8ABF8996F9167587D41EB21F70C472D6BC289E7D5F5143DE6AFB5B1EDB19EC0C78D079BE7D29A458E5
DP = 5D4A9819F3D6D8613CF2F4C918B65DA3BE1C3C2585E038B51D59E326F13456A9EF1AE30C4508A3737C73E0858F3CB96D49519782887737598C94EB4DDECA0F1331FAC05DF1F3EED557A26F880A09C7C5F58C5A22987167193073C4F5539DF4136D77EC0FFBB249E6BBB2B72C8993D6E3FF307171E262A563E56E65DA45A6C181
DQ = E126F72217EA9A626FE84829A80A4A9A3232C894E4418A08C5FFCCE2EDD6BDF80E960B6BF9D4A8B1A3B14AAC70B4B0D6C38F5232130DAA68EAE013B8D770E08516CE19F13E204360D13FA32898507343A9191350DCD9606E7568E0A462D8262997B30AE62AECD29D1E830E36593D7439CB4597CA6D2680AC2DC2CB9E1B8258CD
QP = 38E6BF6E04F88FD807C7B1DA9EE179452484A387DC680EF46282EF1CC6ABC5382F73DB536B47C4177224D70D645177137CE154AF604F36588E0375B6F81A482AEC83018710CF69BDB1A6BD9FB8CC8E9AE4D335F27F639D5AD0AE775A76D02F0610BCC0F8CE0A7543ABE726536ED439CCD01568657A9FB6EDC41271B74F15C817
'''

'''
TODO:RSA-4096
N = 9069512B85D780AFB7F200395E58A211BEE40DD577C7ADEDA6892990684662417FCA6B3D1AD262E7F00B625BBAB14D24EA1F0EC9B71D5AF9C8D476C8913B1FDE9C0A983931FE723A63B3DA59FD79E8C9D969C7C5CB2E4F04F57F6506BC833F570CC461C893148407D432556802A375CE88B0A75305AABF49FB3E33CFD6B881250E14BA37A26151BA3E59AD49829A0303A51281BD6935825B81B45148839603D576ADCC9EC2AB366C833CC6FB4D5D5FCFEC5C2D09C93828BA248A0A9CF144D3BE8093D0E972FC2C8DBC53DA84992E25BE410C0AEC87212C0D27DFC67890A330AD55FB31B82D6254C5FDCED748A948E766A8E26130D7112001340047FF5738416C3139A1A62FFA12F2A6FB17643B08832F245C988658B3F9F1C91C2BB5A9D1E45E7D7D388AEA13BBE39ECC87E61B51E2E1AC2FA20EB808F412E7C4355AEA79E784F3A5FA2A0260A267E39E133BE8C193F454D79FE89411B925FDB3626BE64D924A39DA18145B658BF88246B0209DBFC9FD088C1EB7916AE9E66129D991D41A748009CA0C1BAD8AD4C344CC20A001039014B6B33591FCA43733277E8E213FA0D03B58114C8E23D0F2B9AAEEEEA5ABCE7E26D848B00B115A175BB80812E5ADD24ECE7EFEA07AF70963B337FDE444172AC48499F1708EDE45C91F4635684DF752193FB4C678C97AFEB4D9AF77B3299B644B9708BCFBF933E705B3F968B34BCCD8CD15
E = 010001
D = 1ECF39500DC8025E7AE2188624C8C81AFD1CEE8EA27569781055A7167608BE21B73FDA4D3911B5A442244BA1C25CDD5688D4837529AA0BA4CAE1F94DA51E76182A36606FA368E3B9ED578BB83349F50E4B62340AD0E45A5B767CED72D8792FE44487094D9F837AFFA897EC7CBA436178E4D4BB7E0CF176CA33DDFB73D61D9AFFEAD7253B855B39F28026E5BF8F2B8885188CB03D56DAE1AAE02B3644403E9B26C9A11ECCA83F9AE6DFC0F1BADFB092266C08E65AF621131F537857F74FCA1D5AC157C7F46661C2A7A28C494C8CD9B997B38CFC2FA64CBF77371098E954025CFA3E23CF61B9DD06B50F07380AFA82E14B97B06487E4FA74578D5E99FDB2000084DFCD6530E88C21794A4E3FAAA40B2A1A0BE4DF3A3FCFDFCD67D075D0E4B1D17EF1973D86667682747DD9E81CA7622804F8F3429DCDC69FF2253A9E5C1B678E2DB603C3428A8FEA5F2D9EB7789FA32564E560669359A73BAB768D5263933AD99B463A04C817CCA78CB678D8ED8EF5C3151E36087474C31C7CC2110103A9EDB7EA758CBD56FD8F4B3375690F2FAEBAA29CE284C483B77593D63F013ADEC5B54F4F34711E8DAF7A071B5E4C29580AF382D47C6B9D68E9F6E5C4BA65E2BDBD47CD92C9DF65F6B787A92452E063097E1B43113887B25A20FCD9BE011E35874CA3E29CE8AD1E92C9E84C969370EE3B61EF5F4224096F36F226BBF5EC1C0D7BD8C3D5C1
P = DCF465A7C6E637E2C6E8A01E03A76D44BABA7B8ECEC1E563A3CD4442C449BB724AF1E3DDBA4AF2BA8CC0620500234CB12DEFC345DB5CF368A7E62D4A2E432E3F962F219997F63F7950B21EC2442A7560221DC9A4BA0844668BA684330C6F86CEC5DB3061164A40AE9AC308FAB0CB4A0BD5E3062B16DB2A1DD9037ABC11AF381DACE7C003694A718C2B4DBB6B7FF0044F5DE8E22526C52A49CFC1D872281A2047AED11FEC9A79CB68FBD44BF97CD27A4285D2198B22D23378E5E543047AAF7C8B61A90906D30EC25BFB01478B1B7228956AE42000CFF98DC8FE353F3C206930F4CE758F974E239E06A3E589CC15772D5C17E65E8C9059D8999F96AC19F1D6523D
Q = A750F88014D601B48421A9C14283CC1B71E468A30A796DEAE84DE2B34339C1923E13627CFF362601B332BE9AD8311FD1572C5C4B1B5ADC6F6B2C4AF440154C74451600D6C35A83773BFDC4A9D965FEC1B36A8F0BEE597AD9B26946A44296A8F9E65E472045C9E72F6DC40A0C1C92532441CCAD48BFB487230AEB3F9651A52B5116B37225782BDE051AA7F2485A5D61859C235CF94494FBEC79FC2BFF919C58CA52C9D77A6D67E0A70A95EFC0355D3DC92A37B78E7B137C1DB34ABDF187FD4EEFF6CEE9675EB54C91B7B8105DB582772915C4B87B3EFB82DFBB3C33F45266FFA40169C9E38BE5C5CEE8221D6C0561A727E01C888B7BB76530C29620AEDDD5CBB9
DP = 8C417339F22EF730B3F4BC96F0D8D9AAB42166073BC5A717FDC571DC33FF5DC66A3E6BD7B6C69697C67AE47DAA1DBE340625D93DC1C69A1847E3FBC1C7E60B387FDC01271F6847D87959E7DE8728B0834A84C01819A2DFD07C3B4255A9422E3F9926CEEA021D363BDFAF8846A1ED195EB3F1BD5BA2D192458A190452D7A2F32B1B33AD163D42ED1AFDEE04D77349E7627E09336C43D50A47FA626143EDA2CFF4D0CA9CCA3330B6E7385C05B22402F36AC0C9A23F48E6479829CEC320D7C40779EE8F3F549EAB12C3126D387DDBF9363BCAB36E81358382F6202FAAA93F25A6D6EF2B7EEF9BC14E3186DE50FF446CF7552B32A7B7F075A7E1B4850F5014CC683D
DQ = 98CAD0A3E663285B78EE64DF1FA6CC15A40439A9EA3EC9A9E34A7CE3C7584EF505CB1DFD97F212F32A7A04A5D317C93E9AA4E003968F7B0E2488E649F6DB7C5E1158EE9B30FACF636B5D6AE2D0ACDBE077BFAFB1ED8FB928644CCF3DE1B143CE3219964A5A70EEB5D93F550D8A69F592FEA3B2FAE4562FB2489E5C0B21B3FBC2A94065D4E1D0ED872BB883009FC4F6F1D48C56B32B760239098CC78133AFDB45A824BAAA0A8EFA1091122B4713747A9FE1F5CFA245B29D7D61E5B75F821848A5CA7559A01454EBFF860E88A38AC6019B7B4D924ABA51644A7BE996685F77BFAC3DBE25A7AE71BE1A1CD24A9C02AE12BFCF613F30616230FE3E346AD445B09FC1
QP = 0AAB1D9B3B7F2B6ED5B92825963F036496DEC1659A8ABB453D7FC6A44568C40DAC9056A249E69CDB33498D1A6A8F923185F7997152C27C5B5EEF2C94CD8CEBC86C75AA85B1055DA87E3066D4FBE502A63D1BCCB96B02ABB2B8EF4255A09DC3E628976D374F6ADCF2291F2A3B2D5C3B3DDDECF4FEE54981EB3EE8EC328262A9F329C1001FE7D84EB42C4D6EA6463CEEC53562F505E6CF4A28839F900D03B8785BE2B676A293C8F37911971C07915D854A5BDF774DC2D5A676BA8A1403FFBAC5B03473C46EBEE2E164DA9A64029FCAC9105F50D1A9B2E6A16569826148C20C1945077C2DE65A525D81B3F5637A5335886C865E3AF583D691F92536DBFC1FD6E1E8
'''

### case5-Modular Inverse
# RSA-2048

#TODO: rsa-4096's P
M=0xDCF465A7C6E637E2C6E8A01E03A76D44BABA7B8ECEC1E563A3CD4442C449BB724AF1E3DDBA4AF2BA8CC0620500234CB12DEFC345DB5CF368A7E62D4A2E432E3F962F219997F63F7950B21EC2442A7560221DC9A4BA0844668BA684330C6F86CEC5DB3061164A40AE9AC308FAB0CB4A0BD5E3062B16DB2A1DD9037ABC11AF381DACE7C003694A718C2B4DBB6B7FF0044F5DE8E22526C52A49CFC1D872281A2047AED11FEC9A79CB68FBD44BF97CD27A4285D2198B22D23378E5E543047AAF7C8B61A90906D30EC25BFB01478B1B7228956AE42000CFF98DC8FE353F3C206930F4CE758F974E239E06A3E589CC15772D5C17E65E8C9059D8999F96AC19F1D6523D

### TODO: X is random?
X=0xEA966BD09FFC725BE216507149161B4E8161D11D1C8A8D2033C9B3007327948FD92742277C3CCBCFD064F038E93DAE525A5898BAAF368906D2BA118B2714A907C58F735F694DE33093BE764E331B51AF3F22174367FFF62DAA0E8023DD40520054B117F3C2F96A91F33B29A8216E7E8B60927549C8DA28FE262DA71F07A3EF22EA13CFB5C8EC06F2FC3CA4CAF221EF918436A80E9D00E7135794214B18F97522C90F79C6D372022EBAE51852AF0123D9450C51523EBC27A4877D708ED24DCB50B2D211ECB14E5A8C4C030D1DEE6F70D

#old-rsa1024
#Y=pow(2,1024*2)%M
#Y=0x5a85702a8f192079c4c369e1e03fc9840aaeefb13f1ddebaa4d10e8a0a3ffafe9c68c00c8e29c6cf193d6b4b8ff4ecc53118c20eaa5589a0720b055da9394894b8935c0e11a119e546fdc9b5129b3a458d694f70b6e847d07548edad606fe0b88d9d4867cdc577a8959969bd06dcc553af209b5fc41ae661b9f7e69c421c2b41

'''
[注意] 新python公式，与Y无关了。 而aquila的zmodp模块，还是与Y有关系的，注意要DWORD换顺序.!!!

Y=pow(2,1024*2)%M
原来计算出Y是这给:421c2b41b9f7e69cc41ae661af209b5f06dcc553959969bdcdc577a88d9d4867606fe0b87548edadb6e847d08d694f70129b3a4546fdc9b511a119e5b8935c0ea9394894720b055daa5589a03118c20e8ff4ecc5193d6b4b8e29c6cf9c68c00c0a3ffafea4d10e8a3f1ddeba0aaeefb1e03fc984c4c369e18f1920795a85702a
要转化为这个，设置在python中使用：#Y=0x5a85702a8f192079c4c369e1e03fc9840aaeefb13f1ddebaa4d10e8a0a3ffafe9c68c00c8e29c6cf193d6b4b8ff4ecc53118c20eaa5589a0720b055da9394894b8935c0e11a119e546fdc9b5129b3a458d694f70b6e847d07548edad606fe0b88d9d4867cdc577a8959969bd06dcc553af209b5fc41ae661b9f7e69c421c2b41
'''

Y=pow(2,2048*2)%M

print ("")
print ("...doing...,....keep waiting...")
print ("")
 
ResultZ=modinv(X,M) 

''' 
output
'''

print ("*** python for ZMODP *** Modular Inverse *** start ***")
print ("### Given M, X and  r = 2^(2n) mod M. compute Z = X^(-1) mod M ###")
print ("")
print ("S1---input param start--")
print ("input data: RSA-2048")
print ("")

#S1: input param
print ("M=0x")
print (" %x" %M)
print ("X=0x")
print (" %x" %X)
print ("(Y is pre-compu M result). Y=0x")
print (" %x" %Y)

print ("")
print ("---input param end--")
print ("")
print ("")
print ("S2......running......")
print ("        .............done")
print ("")
print ("")
print ("S3---output result start--")
print ("")

#S3: result 
print ("ResultZ=0x")
print (" %x" %ResultZ)

print ("")
print ("---output result end--")
print ("")
print ("*** python for ZMODP *** Modular Inverse *** end ***")



