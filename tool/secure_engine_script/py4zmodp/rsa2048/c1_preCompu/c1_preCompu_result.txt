*** python for ZMODP *** Pre-Computation of R(=2^(2n)) *** start ***
### Given M, compute Z = 2^(2n) mod M ###

S1---input param start--
input data: RSA-2048

M=0x
 ea966bd09ffc725be216507149161b4e8161d11d1c8a8d2033c9b3007327948fd92742277c3ccbcfd064f038e93dae525a5898baaf368906d2ba118b2714a907c58f735f694de33093be764e331b51af3f22174367fff62daa0e8023dd40520054b117f3c2f96a91f33b29a8216e7e8b60927549c8da28fe262da71f07a3ef22ea13cfb5c8ec06f2fc3ca4caf221ef918436a80e9d00e7135794214b18f97522c90f79c6d372022ebae51852af0123d9450c51523ebc27a4877d708ed24dcb50b2d211ecb14e5a8c4c030d1dee6f7f97a66e7899e2a8eeaef9b3346b6e1fb3a0c1cfeb48d1e63eda14196061f37bed77f57470adc9b52cb1a9a08140b25f3635

---input param end--


S2......running......
        .............done


S3---output result start--

ResultZ=0x
 3a9c744f8c201ab1b4d05c980315da24d2c5985ba92a907249b8293798f24998f5e9a7c9cfe2cf38fd5c324afdb505038eff367e2710d1942374df5bc8adf38644f7cbbb255c06532c1e6141dfc1fb441941cca2b724611fb226b7c9bc677a09ff1523174226fbdc67db8bca1300997e8dcda7304077a02d4caa74a90e2c0c438a4a1860a3d9c1e1070169ff02fb2ad52a685a275ad326a77178f0c6d878d2713cdb1f37a0515ba5b18398f30aa1156f380604de7cbb24c67a975336d8aeeabc6c49c93efbb887a8c4466a92b93e2d8c39685a455451ccd206ee789d876b1eab77f49568560d35f183df71b030ebf1af66a3ae161829c9268cb68801faaa6949

---output result end--

*** python for ZMODP *** Pre-Computation of R *** end ***
