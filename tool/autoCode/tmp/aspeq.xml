<?xml version="1.0" encoding="UTF-8"?>
	<spirit:component xmlns:kactus2="http://funbase.cs.tut.fi/" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5 http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5/index.xsd">
		<spirit:vendor>org.example</spirit:vendor>
		<spirit:library>example_lib</spirit:library>
		<spirit:name>aspeq</spirit:name>
		<spirit:version>example_version</spirit:version>
<spirit:memoryMaps>
<spirit:memoryMap>
<spirit:name>some_register_map</spirit:name>
<spirit:displayName>RDL Example Registers</spirit:displayName>
<spirit:addressBlock>
<spirit:name>some_register_map</spirit:name>
<spirit:displayName>ASR Module Registers</spirit:displayName>
<spirit:description>This address map contains some example registers to show how RDL can be utilized in various situations.</spirit:description>
<spirit:baseAddress>0xFFA02000</spirit:baseAddress>
<spirit:range>0x2000</spirit:range>
<spirit:width>32</spirit:width>
<spirit:usage> </spirit:usage>
<spirit:volatile>true</spirit:volatile>
<spirit:register>
<spirit:name>EQU_Hx_SLOT1_REG</spirit:name>
<spirit:description>Causal Half-slot Channel Tap Register</spirit:description>
<spirit:addressOffset>0X00</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>HX_S1_Q</spirit:name>
<spirit:description>hx_s1_q  this field contains the 2's complement channel taps values for the causal half slot (q).</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>12</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>HX_S1_I</spirit:name>
<spirit:description>hx_s1_i  this field contains the 2's complement channel taps values for the causal half slot (i).</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>12</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_Hx_SQR_REG_S1</spirit:name>
<spirit:description>Causal Half-slot Channel Tap Square Root Register</spirit:description>
<spirit:addressOffset>0X1C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>HX_SQR_S1_Q</spirit:name>
<spirit:description>hx_sqr_s1_q  sqrt(2)/2*hx_s1_q</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>12</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>HX_SQR_S1_I</spirit:name>
<spirit:description>hx_sqr_s1_i  sqrt(2)/2*hx_s1_i</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>12</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_Hx_SLOT2_REG</spirit:name>
<spirit:description>Anti-causal Half-slot Channel Tap Register</spirit:description>
<spirit:addressOffset>0X38</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>HX_S2_Q</spirit:name>
<spirit:description>hx_s2_q  this field contains the 2's complement channel taps values for the anti-causal half slot (q).</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>12</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>HX_S2_I</spirit:name>
<spirit:description>hx_s2_i  this field contains the 2's complement channel taps values for the anti-causal half slot (i).</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>12</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_Hx_SQR_REG_S2</spirit:name>
<spirit:description>Anti-causal Half-slot Channel Tap Square Root Register</spirit:description>
<spirit:addressOffset>0X54</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>HX_SQR_S2_Q</spirit:name>
<spirit:description>hx_sqr_s2_q  sqrt(2)/2*hx_reg_s2_q</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>12</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>HX_SQR_S2_I</spirit:name>
<spirit:description>hx_sqr_s2_i  sqrt(2)/2*hx_reg_s2_i</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>12</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_MU0_REG</spirit:name>
<spirit:description>&lt;mu&gt;0 Register</spirit:description>
<spirit:addressOffset>0X70</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>&lt;MU&gt;5</spirit:name>
<spirit:description>&lt;mu&gt;5</spirit:description>
<spirit:bitOffset>25</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>&lt;MU&gt;4</spirit:name>
<spirit:description>&lt;mu&gt;4</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>&lt;MU&gt;3</spirit:name>
<spirit:description>&lt;mu&gt;3</spirit:description>
<spirit:bitOffset>15</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>&lt;MU&gt;2</spirit:name>
<spirit:description>&lt;mu&gt;2</spirit:description>
<spirit:bitOffset>10</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>&lt;MU&gt;1</spirit:name>
<spirit:description>&lt;mu&gt;1</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>&lt;MU&gt;0</spirit:name>
<spirit:description>&lt;mu&gt;0</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_MU6_REG</spirit:name>
<spirit:description>&lt;mu&gt;1 Register</spirit:description>
<spirit:addressOffset>0X74</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>&lt;MU&gt;6</spirit:name>
<spirit:description>&lt;mu&gt;6</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_HD_S1_REGx</spirit:name>
<spirit:description>Causal Half-slot Hard Decision Register</spirit:description>
<spirit:addressOffset>0X78</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>HD_X_S1</spirit:name>
<spirit:description>hd_x_s1  this field stores the hard decision for the equalized symbol of the causal half-slot.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>30</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_HD_S2_REGx</spirit:name>
<spirit:description>Anti-causal Half-slot Hard Decision Register</spirit:description>
<spirit:addressOffset>0X90</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>HD_X_S2</spirit:name>
<spirit:description>hd_x_s2  this field stores the hard decision for the equalized symbol of the causal half-slot.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>30</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_SWRES_REG</spirit:name>
<spirit:description>Software Reset Register</spirit:description>
<spirit:addressOffset>0XA8</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>ASPEQ_SW_RESET132</spirit:name>
<spirit:description>software reset  1 = software reset  0 = no software reset</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_CONT_REG</spirit:name>
<spirit:description>Equalizer Control Register</spirit:description>
<spirit:addressOffset>0XAC</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>EQUALIZER_GO</spirit:name>
<spirit:description>equalizer go  1 = equalizer go  0 = equalizer no go</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DEBUG_MODE_ON</spirit:name>
<spirit:description>debug mode on  1 = debug mode enabled - equalizer enters debug mode every eight processed symbols (hardware/software reset to exit)  0 = debug mode disabled</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CHANNEL_TRACKING_ON</spirit:name>
<spirit:description>channel tracking on  1 = channel tracking and update of channel taps enabled  0 = channel tracking and update of channel taps disabled</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SOFT_METRIC_ON</spirit:name>
<spirit:description>soft metric on  1 = soft metric llr calculation enabled  0 = soft metric llr calculation disabled</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_STATUS_REG</spirit:name>
<spirit:description>Equalizer Status Register</spirit:description>
<spirit:addressOffset>0XB0</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>NEW_OLD_MEMORY</spirit:name>
<spirit:description>new/old memory  this field indicates which memory is read during debug mode.</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SEQUENCER_ERROR</spirit:name>
<spirit:description>sequencer error  this field is set when a forbidden state occurs. for example: not enough symbols to start equalization (at least 13 for 8psk, 8 for gmsk)</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DEBUG_STANDBY</spirit:name>
<spirit:description>debug standby  this field is set when the equalizer waits for data request. when data request is given, this field is cleared.</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DEBUG_DATA_READY</spirit:name>
<spirit:description>debug data ready  this field is set when debug data is ready.</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MIDDLE_OF_EQU2</spirit:name>
<spirit:description>middle of equ2  for causal and anti-causal half slot: this field is set to 1 when a given number of symbols, as defined in the equalizer mode 0 register, have been processed.</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MIDDLE_OF_EQU1</spirit:name>
<spirit:description></spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DATA_VALID</spirit:name>
<spirit:description>data valid  the equalization process has started, and some valid data is presented in the llr memories.</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>END_OF_EQUALIZATION</spirit:name>
<spirit:description>end of equalization  this field is set when all symbols have been processed.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_MODE0_REG</spirit:name>
<spirit:description>Equalizer Mode 0 Register</spirit:description>
<spirit:addressOffset>0XB4</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>INDEPENDENT_TAPS</spirit:name>
<spirit:description>independent taps  1 = h0/6_s2 are written independently  when set to 1, the anti-causal taps have no dependency on the causal taps written to registers hx_reg_s1.  0 = h0/6_s2 are the complex conjugate of h0/6_s1  when set to 0, the anti-causal taps in registers hx_reg_s2 are automatically set by hardware as complex conjugates of the causal taps - when writing tap values to hxreg_s1. this involves negating the q part of the complex causal taps. in this case, register hx_reg_s2 should not be written.</spirit:description>
<spirit:bitOffset>30</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DEBUG_THRESHOLD</spirit:name>
<spirit:description>debug threshold  during debug mode, a debug standby interrupt is given every symbol if it is 0 or every eight symbols if it is 1.</spirit:description>
<spirit:bitOffset>29</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>EQUALIZATION_TYPE</spirit:name>
<spirit:description>equalization type  1 = 8psk  0 = gmsk</spirit:description>
<spirit:bitOffset>28</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>GMSK_CTU_RATE</spirit:name>
<spirit:description>gmsk ctu rate  this field is used for the gmsk channel tracking rate (ctu) of taps update (1,2,4,8) for equalizer metrics calculation.</spirit:description>
<spirit:bitOffset>26</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SM_LAST_STATE_S2</spirit:name>
<spirit:description>sm last state s2  this field is used for the state before final state when close equ mode s2 is set.</spirit:description>
<spirit:bitOffset>23</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LAST_STATE_S2</spirit:name>
<spirit:description>last state s2  this field is used for the final state when close equ mode s2 is set.</spirit:description>
<spirit:bitOffset>20</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CLOSE_EQU_MODE_S2</spirit:name>
<spirit:description>the equalization finished in 2 known states (as defined in last state s2 and sm last state 2)</spirit:description>
<spirit:bitOffset>19</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>SM_LAST_STATE_S1</spirit:name>
<spirit:description>state before final state when close equ mode s1 is set</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LAST_STATE_S1</spirit:name>
<spirit:description>last state s1  this field is used for the final state when close equ mode s1 is set.</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CLOSE_EQU_MODE_S1</spirit:name>
<spirit:description>close equ mode s1  the equalization finished in two known states (as defined in &lt;last state s1&gt; and &lt;sm last state s1&gt;).</spirit:description>
<spirit:bitOffset>12</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>NUM_OF_SYMB_2_1ST_INT</spirit:name>
<spirit:description>number of symbols to first interrupt</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>6</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>NUM_OF_SYMB_2_EQU</spirit:name>
<spirit:description>number of symbols to equalize for each half slot</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>6</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_MODE1_SLOT1_REG</spirit:name>
<spirit:description>Equalizer Mode 1 S1 Register</spirit:description>
<spirit:addressOffset>0XB8</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>INIT_STATE_S1</spirit:name>
<spirit:description>init state s1  for 8psk mode: 6 x 3-bit  for gmsk mode: 5-bit of initial state and 12-bit of initial path metric value (two 0 bits are concatenated at the lsb for calculation)</spirit:description>
<spirit:bitOffset>3</spirit:bitOffset>
<spirit:bitWidth>18</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CHANNEL_LENGTH</spirit:name>
<spirit:description>length of channel -1  010 to 110 (3 to 7) for 8psk, always 6 for gmsk</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_MODE1_SLOT2_REG</spirit:name>
<spirit:description>Equalizer Mode 1 S2 Register</spirit:description>
<spirit:addressOffset>0XBC</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>INIT_STATE</spirit:name>
<spirit:description>init state  for 8psk mode: 6 x 3-bit  for gmsk mode: 5-bit of initial state and 12-bit of initial path metric value (two 0 bits are concatenated at the lsb for calculation)</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>18</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_DBG_DATA_REG</spirit:name>
<spirit:description>Equalizer Debug Data Read Register</spirit:description>
<spirit:addressOffset>0XC0</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>DBG_DATA</spirit:name>
<spirit:description>debug data read register</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>32</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_RESUME_REG</spirit:name>
<spirit:description>Equalizer Debug Standby Resume Register</spirit:description>
<spirit:addressOffset>0XC4</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>ASPEQ_RESUME218</spirit:name>
<spirit:description>debug standby resume</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_REQ_REG</spirit:name>
<spirit:description>Equalizer Debug Data Request Register</spirit:description>
<spirit:addressOffset>0XC8</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>DBG_MEM</spirit:name>
<spirit:description>dbg_mem  this field defines the memory to be read:  0x0 = branch metric memory (8psk) / delta memory (gmsk): 512 x 12/11-bit (9-bit of dbg_addr[8:0])  0x1 = path metric memory (8psk): 64 -bit x 14-bit (address defined by dbg_addr[5:0])  0x2 = old trellis memory (8psk) (new if &lt;new/old memory&gt; field in the equalizer status register is 1): 8 x 18-bit (address defined by dbg_addr[2:0])  0x3 = new trellis memory (8psk) (old if &lt;new/old memory&gt; field is 1): 8 x 18-bit (address defined by dbg_addr[2:0])  0x4 = old path metric memory 0 (gmsk) (new if &lt;new/old memory&gt; field is 1): 16 x 14 bit (address defined by dbg_addr[3:0])  0x5 = new path metric memory 1 (gmsk) (old if &lt;new/old memory&gt; field is 1): 16 x 14 bit (address defined by dbg_addr[3:0])  0x6 = old path metric memory 2 (gmsk) (new if &lt;new/old memory&gt; field is 1): 16 x 14 bit (address defined by dbg_addr[3:0])  0x7 = new path metric memory 3 (gmsk) (old if &lt;new/old memory&gt; field is 1): 16 x 14 bit (address defined by dbg_addr[3:0])</spirit:description>
<spirit:bitOffset>9</spirit:bitOffset>
<spirit:bitWidth>3</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DBG_ADDR</spirit:name>
<spirit:description>dbg_addr  defines the address in memory to be ready</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>9</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_CURR_SYM_REG</spirit:name>
<spirit:description>Current Symbol Register</spirit:description>
<spirit:addressOffset>0XCC</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CURRENT_SYMBOL236</spirit:name>
<spirit:description>current symbol q value</spirit:description>
<spirit:bitOffset>22</spirit:bitOffset>
<spirit:bitWidth>10</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CURRENT_SYMBOL238</spirit:name>
<spirit:description>current symbol i value</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>10</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_NV_SLOT1_REG0</spirit:name>
<spirit:description>Causal Half-slot Noise Variance 0 Register</spirit:description>
<spirit:addressOffset>0XD0</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>NV_0_S1</spirit:name>
<spirit:description>minimum pm</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>14</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_NV_SLOT1_REG1</spirit:name>
<spirit:description>Causal Half-slot Noise Variance 1 Register</spirit:description>
<spirit:addressOffset>0XD4</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>5-BIT_COUNTER257</spirit:name>
<spirit:description>5-bit counter</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>ZERO_STATE_PM258</spirit:name>
<spirit:description>zero state pm</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>14</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_NV_SLOT2_REG0</spirit:name>
<spirit:description>Anti-causal Half-slot Noise Variance 0 Register</spirit:description>
<spirit:addressOffset>0XD8</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>NV0_S2</spirit:name>
<spirit:description>minimum pm</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>14</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_NV_SLOT2_REG1</spirit:name>
<spirit:description>Anti-causal Half-slot Noise Variance 1 Register</spirit:description>
<spirit:addressOffset>0XDC</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>5-BIT_COUNTER276</spirit:name>
<spirit:description>5-bit counter</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>ZERO_STATE_PM277</spirit:name>
<spirit:description>zero state pm</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>14</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_LLR_REG_S1</spirit:name>
<spirit:description>Causal Half-slot 44 Soft Metrics Registers</spirit:description>
<spirit:addressOffset>0X100</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>LLR3287</spirit:name>
<spirit:description>llr3 value</spirit:description>
<spirit:bitOffset>24</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LLR2288</spirit:name>
<spirit:description>llr2 value</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LLR1289</spirit:name>
<spirit:description>llr1 value 1</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LLR00</spirit:name>
<spirit:description>llr0 value</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>EQU_LLR_REG_S2</spirit:name>
<spirit:description>Anti-causal Half-slot 44 Soft Metrics Register</spirit:description>
<spirit:addressOffset>0X200</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>LLR3305</spirit:name>
<spirit:description>llr3 value</spirit:description>
<spirit:bitOffset>24</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LLR2306</spirit:name>
<spirit:description>llr2 value</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LLR1307</spirit:name>
<spirit:description>llr1 value</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>LLR0</spirit:name>
<spirit:description>llr0 value</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>DUMMY_REGISTER</spirit:name>
<spirit:description>This is a Dummy Register</spirit:description>
<spirit:addressOffset>0XX</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>ASPEQ_DUMMY320</spirit:name>
<spirit:description>this is a dummy register used as a workaround to fix an issue with the rev 2.21 perl script that requires another register follow the last include file (shown above). ignore this register as it will not show up in documentation anyway. (mclark)</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>32</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
</spirit:addressBlock>
</spirit:memoryMap>
</spirit:memoryMaps>
</spirit:component>