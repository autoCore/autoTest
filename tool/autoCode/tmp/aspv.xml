<?xml version="1.0" encoding="UTF-8"?>
	<spirit:component xmlns:kactus2="http://funbase.cs.tut.fi/" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5 http://www.spiritconsortium.org/XMLSchema/SPIRIT/1.5/index.xsd">
		<spirit:vendor>org.example</spirit:vendor>
		<spirit:library>example_lib</spirit:library>
		<spirit:name>aspv</spirit:name>
		<spirit:version>example_version</spirit:version>
<spirit:memoryMaps>
<spirit:memoryMap>
<spirit:name>some_register_map</spirit:name>
<spirit:displayName>RDL Example Registers</spirit:displayName>
<spirit:addressBlock>
<spirit:name>some_register_map</spirit:name>
<spirit:displayName>ASR Module Registers</spirit:displayName>
<spirit:description>This address map contains some example registers to show how RDL can be utilized in various situations.</spirit:description>
<spirit:baseAddress>0xFFA01000</spirit:baseAddress>
<spirit:range>0x2000</spirit:range>
<spirit:width>32</spirit:width>
<spirit:usage> </spirit:usage>
<spirit:volatile>true</spirit:volatile>
<spirit:register>
<spirit:name>VD_SW_RST</spirit:name>
<spirit:description>Viterbi Decoder SW Reset Register</spirit:description>
<spirit:addressOffset>0X00</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>VD_SW_RST</spirit:name>
<spirit:description>viterbi decoder software reset. this bit is used to reset the viterbi unit by software. configuration registers and input buffer are not affected by a software reset.  to reset, perform the following:</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_CTL</spirit:name>
<spirit:description>Viterbi Decoder Control Register</spirit:description>
<spirit:addressOffset>0X04</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>GPB_BIT_ORDER</spirit:name>
<spirit:description>output buffer bit ordering on gpb  1 = msb on d0 ... lsb on d31  0 = msb on d31 ... lsb on d0</spirit:description>
<spirit:bitOffset>14</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>DEBUG_MODE</spirit:name>
<spirit:description>1 = debug mode enabled, reading the input buffer content is allowed via the input buffer read register. viterbi calculation is disabled  0 = debug mode disabled. viterbi calculation is enabled</spirit:description>
<spirit:bitOffset>13</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TRACEBACK_EMPTY_</spirit:name>
<spirit:description>this field defines the number of valid symbols (bits) per middle block traceback.</spirit:description>
<spirit:bitOffset>11</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>GPB_CLOCK_ENABLE</spirit:name>
<spirit:description>user should enable the gpb clock before accessing the viterbi buffers  1 = gpb clock to viterbi is enabled  0 = gpb clock to viterbi is disabled</spirit:description>
<spirit:bitOffset>10</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CRC_BIT_ORDER</spirit:name>
<spirit:description>crc result bit order on aspec bus:  1 = msb on d0 ... lsb on d31  0 = msb on d31 ... lsb on d0</spirit:description>
<spirit:bitOffset>9</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TRACEBACK_START_INDEX35</spirit:name>
<spirit:description>1 = traceback start index is the calculated most reliable index.  0 = traceback start index is a programmable value from traceback start index field in the traceback start register.</spirit:description>
<spirit:bitOffset>8</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>ASPVI_HW_MODE36</spirit:name>
<spirit:description>hw mode allows the wcdma modem hw to write the viterbi input buffer directly.  1 = wcdma modem writes to the viterbi input buffer.  0 = grayback or grayback dma can write to the viterbi input buffer (via gpb)</spirit:description>
<spirit:bitOffset>7</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CONTINUOUS_MODE</spirit:name>
<spirit:description>continuous mode allows to perform several decode calculations over the same block which is kept in the input buffer.  for example: in a blind rate detection, the block size is unknown, continuous mode allows to perform several calculations with different block sizes over the same block.  to abort a continuous mode calculation, perform a software reset.  to resume a calculation, refer to the viterbi resume register.  1 = continuous mode enabled  0 = continuous mode disabled</spirit:description>
<spirit:bitOffset>6</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FORCE_ZERO_STATE</spirit:name>
<spirit:description>force the first k-1 stages to zero state  1 = force to zero state  0 = don't force to zero state</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CRC_EN</spirit:name>
<spirit:description>enables the rsc/crc calculation  1 = rsc/crc calculation is enabled  0 = rsc/crc calculation is disabled</spirit:description>
<spirit:bitOffset>4</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>CONSTRAINT</spirit:name>
<spirit:description>viterbi constraint length  0x0 for k = 5  0x1 for k = 7  0x2 for k = 9  0x3 = reserved</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>ASPVI_RATE41</spirit:name>
<spirit:description>viterbi rate  0x0 for decoding rate of 1/2  0x1 for decoding rate of 1/3  0x2 = for decoding rate of 1/4  0x3 = reserved</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>2</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_BSZ</spirit:name>
<spirit:description>Viterbi Decoder Block Size and Last Word Register</spirit:description>
<spirit:addressOffset>0X08</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>LAST_WORD_INDEX</spirit:name>
<spirit:description>this field contains the number of words to be written to the viterbi input buffer. the viterbi starts its calculation after the last word is written.  last word value depends on the rate as follows:  for rate 1/2: last word = blocksize/3  for rate 1/3: last word = blocksize/2  for rate 1/4: last word = blocksize</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>11</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>ASPVI_BLOCK_SIZE53</spirit:name>
<spirit:description>this field contains the number of symbols in the current block.  format: value in this field is number of symbols -1. for example: 1024 symbols value is 0x3ff  the value of block size to be written to the register should be reduced by one from the actual block size value that is calculated from the above example.  valid values: k=5 [0x004:0x3ff], k=7 [0x006:0x3ff], k=9 [0x009:0x3ff]</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>10</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_MPE01</spirit:name>
<spirit:description>Viterbi Decoder Mask Polynomial (C0/C1) Register</spirit:description>
<spirit:addressOffset>0X0C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>C1_MASK_POLYNOMIAL</spirit:name>
<spirit:description>mask polynomial for code bit c1</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>9</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>C0_MASK_POLYNOMIAL</spirit:name>
<spirit:description>mask polynomial for code bit c0</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>9</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_MPE23</spirit:name>
<spirit:description>Viterbi Decoder Mask Polynomial (C2/C3) Register</spirit:description>
<spirit:addressOffset>0X10</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>C3_MASK_POLYNOMIAL</spirit:name>
<spirit:description>mask polynomial for code bit c3</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>9</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>C2_MASK_POLYNOMIAL</spirit:name>
<spirit:description>mask polynomial for code bit c2</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>9</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_RSCM</spirit:name>
<spirit:description>Viterbi Decoder RSC Mask Polynomial Register</spirit:description>
<spirit:addressOffset>0X14</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>RSC_MASK</spirit:name>
<spirit:description>rsc mask polynomial</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>9</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_CFL</spirit:name>
<spirit:description>Viterbi Decoder CRC First and Last Bits Register</spirit:description>
<spirit:addressOffset>0X18</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>LAST_BIT_INDEX</spirit:name>
<spirit:description>index of last bit for crc calculation  valid values: 0x001 to 0x3ff where   first crc bit index &lt; last crc bit index &lt;= block size</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>10</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>FIRST_BIT_INDEX</spirit:name>
<spirit:description>index of first bit for crc calculation  valid values: 0x000 to 0x3fe</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>10</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_CRCI</spirit:name>
<spirit:description>Viterbi Decoder CRC Initial Value Register</spirit:description>
<spirit:addressOffset>0X1C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CRC_INITIAL_VALUE</spirit:name>
<spirit:description>crc initial value</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>32</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_CRCM</spirit:name>
<spirit:description>Viterbi Decoder CRC Mask Polynomial Register</spirit:description>
<spirit:addressOffset>0X20</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CRC_MASK_POLYNOMIAL</spirit:name>
<spirit:description>crc mask polynomial</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>32</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_TBST</spirit:name>
<spirit:description>Viterbi Decoder TraceBack Start and Index Register</spirit:description>
<spirit:addressOffset>0X24</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>TRACEBACK_START_INDEX120</spirit:name>
<spirit:description>when the traceback start index bit in the control register is 0, the traceback calculation starts from the state index as defined in this field.  valid values:  for k=9: 0x00 to 0xff  for k=7: 0x00 to 0x3f  for k=5: 0x00 to 0x0f</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>TRACEBACK_START_SYMBOL</spirit:name>
<spirit:description>this field contains the number of first symbol to start the traceback calculation.  valid values for cyclic traceback are:  for k=9: 0x000 to 0x07f  for k=7: 0x000 to 0x1ff  for k=5: 0x000 to 0x3ff</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>10</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_OBRA</spirit:name>
<spirit:description>Viterbi Decoder Random Access Load Address Register</spirit:description>
<spirit:addressOffset>0X28</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>INPUT_BUFFER_READ_ADDRESS</spirit:name>
<spirit:description>this field contains the start address when reading the input buffer.  whenever this field is different from 0x00 and a dummy read from the input buffer is performed, this field is loaded to the input buffer address register.   when this field equals to 0x00, each read from the input buffer increments the input buffer address register.</spirit:description>
<spirit:bitOffset>5</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>OUTPUT_BUFFER_READ_ADDRESS</spirit:name>
<spirit:description>this field contains the start address when reading the output buffer.  whenever this field is different from 0x00 and a dummy read from the output buffer is performed, this field is loaded to the output buffer address register.   when this field equals to 0x00, each read from the output buffer increments the output buffer address register.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>5</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_RSM</spirit:name>
<spirit:description>Viterbi Decoder Resume Register</spirit:description>
<spirit:addressOffset>0X2C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CRC_RESTART</spirit:name>
<spirit:description>the viterbi decoder supports multiple crc calculations over the same block which resides in the output buffer. setting this bit restarts a crc calculation.  the user must reconfigure the crc parameters (init, mask, first and last) before restart of the crc calculation.  the user must clear this bit before setting it again.</spirit:description>
<spirit:bitOffset>2</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>RECALCULATE</spirit:name>
<spirit:description>setting this bit starts a viterbi calculation over the existing data block in the input buffer.   perform this sequence between calculations:</spirit:description>
<spirit:bitOffset>1</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>ASPVI_RESUME147</spirit:name>
<spirit:description>setting this bit resumes a continuous-mode calculation (viterbi resumes its calculation from the point it has stopped and according to the new configuration).   to resume another calculation, clear this bit, and then set it. this bit has effect only when viterbi is configured to continuous mode.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_IBR</spirit:name>
<spirit:description>Viterbi Decoder Input Buffer Read Register</spirit:description>
<spirit:addressOffset>0X30</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>INPUT_BUFFER_READ_DATA</spirit:name>
<spirit:description>this field contains the current word the was read from the input buffer.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>30</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_MRLR</spirit:name>
<spirit:description>Viterbi Decoder Most/Least Reliable State Metric Register</spirit:description>
<spirit:addressOffset>0X34</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>LEAST_RELIABLE</spirit:name>
<spirit:description>this field contains the least reliable state metric value. this is the maximum state metric value for current symbol.</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>10</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MOST_RELIABLE</spirit:name>
<spirit:description>this field contains the most reliable state metric value.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>10</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_MRIDZSM</spirit:name>
<spirit:description>Viterbi Decoder Most Reliable State Metric Index and State Zero Register</spirit:description>
<spirit:addressOffset>0X38</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>ZERO_STATE_METRIC</spirit:name>
<spirit:description>this field contains the state metric value of state zero.</spirit:description>
<spirit:bitOffset>16</spirit:bitOffset>
<spirit:bitWidth>10</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
<spirit:field>
<spirit:name>MOST_RELIABLE_INDEX</spirit:name>
<spirit:description>this field contains the most reliable index.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>8</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_MDL</spirit:name>
<spirit:description>Viterbi Decoder Modulo Wrap-Around Results Register</spirit:description>
<spirit:addressOffset>0X3C</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>MODULO</spirit:name>
<spirit:description>this field contains the modulo counter value.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>7</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_CRCR</spirit:name>
<spirit:description>Viterbi Decoder CRC Result Register</spirit:description>
<spirit:addressOffset>0X40</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>CRC_RESULT</spirit:name>
<spirit:description>this field contains the crc result. crc result bit ordering is as defined in the crc bit order bit in the control register.</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>32</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_STATUS</spirit:name>
<spirit:description>Viterbi Decoder Status Register</spirit:description>
<spirit:addressOffset>0X44</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>ASPVI_STATUS210</spirit:name>
<spirit:description>1 = viterbi is active  0 = viterbi is idle</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>1</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
<spirit:register>
<spirit:name>VD_ASPEC_OB_START</spirit:name>
<spirit:description>Viterbi Decoder Output Buffer on ASPEC Register</spirit:description>
<spirit:addressOffset>0X80</spirit:addressOffset>
<spirit:size>32</spirit:size>
<spirit:volatile>true</spirit:volatile>
<spirit:access>read-write</spirit:access>
<spirit:reset>
<spirit:value>0</spirit:value>
<spirit:mask>0xffffffff</spirit:mask>
</spirit:reset>
<spirit:field>
<spirit:name>OUTPUT_BUFFER_ON_ASPEC</spirit:name>
<spirit:description>read data from output buffer according to address offset value (0 &lt; offset &lt; 31).</spirit:description>
<spirit:bitOffset>0</spirit:bitOffset>
<spirit:bitWidth>32</spirit:bitWidth>
<spirit:access>read-write</spirit:access>
</spirit:field>
</spirit:register>
</spirit:addressBlock>
</spirit:memoryMap>
</spirit:memoryMaps>
</spirit:component>